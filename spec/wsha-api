{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for the WaveSuite Health & Analytics.",
        "version": "1.0.0",
        "title": "WaveSuite Health & Analytics API",
        "license": {}
    },
    "basePath": "/wavesuite/ha",
    "tags": [
        {
            "name": "Alarm",
            "description": "The  Alarm API"
        },
        {
            "name": "Connector",
            "description": "The  Connector API"
        },
        {
            "name": "Installer",
            "description": "The  Installer API"
        },
        {
            "name": "Kpi",
            "description": "The  Kpi API"
        },
        {
            "name": "MaintenanceInterval",
            "description": "The  MaintenanceInterval API"
        },
        {
            "name": "Network",
            "description": "The  Network API"
        },
        {
            "name": "NetworkGroup",
            "description": "The  NetworkGroup API"
        },
        {
            "name": "NetworkManager",
            "description": "The  NetworkManager API"
        },
        {
            "name": "NetworkReferences",
            "description": "The  NetworkReferences API"
        },
        {
            "name": "OtdrDefinition",
            "description": "The  OtdrDefinition API"
        },
        {
            "name": "Reports",
            "description": "The  Reports API"
        },
        {
            "name": "Server",
            "description": "The  Server API"
        },
        {
            "name": "Settings",
            "description": "The  Settings API"
        },
        {
            "name": "Weather",
            "description": "The  Weather API"
        }
    ],
    "paths": {
        "/api/v1/alarm-configs": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Configs",
                "description": "Get Alarm Configs",
                "operationId": "getAlarmConfigs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Save Alarm Config",
                "description": "Save Alarm Configs",
                "operationId": "addAlarmConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "alarmConfig",
                        "description": "The Alarm Configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    "201": {
                        "description": "Alarm Config successfully saved",
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    "400": {
                        "description": "Alarm Config could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Alarm Config conflicts with another instance"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-configs/{alarmConfigId}": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Config",
                "description": "Get Alarm Config",
                "operationId": "getAlarmConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmConfigId",
                        "in": "path",
                        "description": "The Alarm Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Update the Alarm Config",
                "description": "Update the Alarm Config",
                "operationId": "updateAlarmConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmConfigId",
                        "in": "path",
                        "description": "The Alarm Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "alarmConfig",
                        "description": "The updated alarm config.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmConfig"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Delete an Alarm Config",
                "description": "Delete an Alarm Config",
                "operationId": "deleteAlarmConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmConfigId",
                        "in": "path",
                        "description": "The Alarm Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Alarm Profile successfully deleted"
                    },
                    "400": {
                        "description": "Alarm Profile could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-configs/{alarmConfigId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Statuses with a specific Alarm Config",
                "description": "Get Alarm Statuses With A Specific Alarm Config",
                "operationId": "getAlarmStatusesByAlarmConfigId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmConfigId",
                        "in": "path",
                        "description": "The Alarm Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Alarm config could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-profiles": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Profiles",
                "description": "Get Alarm Profiles",
                "operationId": "getAlarmProfiles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Save Alarm Profile",
                "description": "Save Alarm Profile",
                "operationId": "addAlarmProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "alarmProfile",
                        "description": "The alarm profile",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    "201": {
                        "description": "Alarm Profile successfully saved",
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    "400": {
                        "description": "Alarm Profile could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-profiles/{alarmProfileId}": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Profile",
                "description": "Get Alarm Profile",
                "operationId": "getAlarmProfile",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Update the Alarm Profile",
                "description": "Update the Alarm Profile",
                "operationId": "updateAlarmProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "alarmProfile",
                        "description": "The alarm profile",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmProfile"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Delete an Alarm Profile",
                "description": "Delete an Alarm Profile",
                "operationId": "deleteAlarmProfile",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Alarm Profile successfully deleted"
                    },
                    "400": {
                        "description": "Alarm Profile could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-profiles/{alarmProfileId}/alarm-configs": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get List of Alarm Configs associated to this profile",
                "description": "Get List of Alarm Configs associated to this profile",
                "operationId": "getAlarmProfileConfigs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmConfig"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Save the Alarm Configs associated to this profile",
                "description": "Save the Alarm Configs associated to this profile",
                "operationId": "saveAlarmProfileConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "alarmConfigId",
                        "description": "Alarm Config ID",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Alarm Configs successfully associated to Alarm Profile"
                    },
                    "400": {
                        "description": "Alarm Config could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-statuses": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Statuses",
                "description": "Get Alarm Statuses",
                "operationId": "getAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Statuses Overview",
                "description": "Get Alarm Statuses Overview, Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Alarm Status objects should be done via the standard /alarm-statuses and /alarm-statuses/{alarmStatusId} endpoints ",
                "operationId": "getAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Statuses Summary",
                "description": "Returns the alarm status summary for each port level.  The most recent alarm status change will be assigned the port's last status ",
                "operationId": "getAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-statuses/{alarmStatusId}": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Status",
                "description": "Get Alarm Status",
                "operationId": "getAlarmStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmStatusId",
                        "in": "path",
                        "description": "Alarm Status ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Modify an existing alarm status record to acknowledge/suppress and annotate",
                "description": "Modify an existing alarm status record to acknowledge/suppress and annotate",
                "operationId": "updateAlarmStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmStatusId",
                        "in": "path",
                        "description": "Alarm Status ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "alarmStatusUpdate",
                        "description": "Alarm Status Update Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusUpdate"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/alarm-statuses/{alarmStatusId}/overview": {
            "get": {
                "tags": [
                    "Alarm"
                ],
                "summary": "Get Alarm Status Overview",
                "description": "Get Alarm Status Overview",
                "operationId": "getAlarmStatusOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alarmStatusId",
                        "in": "path",
                        "description": "Alarm Status ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/connectors/hdfs": {
            "get": {
                "tags": [
                    "Connector"
                ],
                "summary": "Get All HDFS Connectors",
                "description": "Get All HDFS Connectors",
                "operationId": "getHdfsConnectors",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Connector"
                ],
                "summary": "Save HDFS Connector",
                "description": "Save an HDFS Connector",
                "operationId": "addHdfsConnector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "hdfsConnector",
                        "description": "The HDFS Connector",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    "201": {
                        "description": "HDFS Connector successfully saved",
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    "400": {
                        "description": "HDFS Connector could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/connectors/hdfs/test": {
            "post": {
                "tags": [
                    "Connector"
                ],
                "summary": "Test HDFS Connector Configuration",
                "description": "Test HDFS Connector Configuration",
                "operationId": "testHdfsConnector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "hdfsConnectorTest",
                        "description": "The HDFS Connector Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsConnectorTest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "HDFS Connector Config test successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "503": {
                        "description": "HDFS Connector Config test failed"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/connectors/hdfs/{connectorId}": {
            "get": {
                "tags": [
                    "Connector"
                ],
                "summary": "Returns a single HDFS Connector",
                "description": "Returns a single HDFS Connector",
                "operationId": "getHdfsConnector",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectorId",
                        "in": "path",
                        "description": "The Connector ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find HDFS Connector"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Connector"
                ],
                "summary": "Update an existing HDFS Connector",
                "description": "Updates an existing HDFS Connector",
                "operationId": "updateHdfsConnector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectorId",
                        "in": "path",
                        "description": "The Connector ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "hdfsConnector",
                        "description": "The update configuration of existing HDFS Connector.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/HdfsConnector"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "HDFS Connector could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find HDFS Connector"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Connector"
                ],
                "summary": "Delete the HDFS Connector",
                "description": "Delete the HDFS Connector",
                "operationId": "deleteHdfsConnector",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectorId",
                        "in": "path",
                        "description": "The Connector ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "HDFS successfully deleted"
                    },
                    "400": {
                        "description": "HDFS Connector could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find HDFS Connector"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/connectors/s3": {
            "get": {
                "tags": [
                    "Connector"
                ],
                "summary": "Get All S3 Connectors",
                "description": "Get All S3 Connectors",
                "operationId": "getS3Connectors",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Connector"
                ],
                "summary": "Save S3 Connector",
                "description": "Save an S3 Connector",
                "operationId": "addS3Connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "s3Connector",
                        "description": "The S3 Connector",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    "201": {
                        "description": "S3 Connector successfully saved",
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    "400": {
                        "description": "S3 Connector could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/connectors/s3/test": {
            "post": {
                "tags": [
                    "Connector"
                ],
                "summary": "Test S3 Connector Configuration",
                "description": "Test S3 Connector Configuration",
                "operationId": "testS3Connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "s3ConnectorTest",
                        "description": "The S3 Connector Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3ConnectorTest"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "S3 Connector Config test successfully"
                    },
                    "400": {
                        "description": "S3 Connector Config test failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/connectors/s3/{connectorId}": {
            "get": {
                "tags": [
                    "Connector"
                ],
                "summary": "Returns a single S3 Connector",
                "description": "Returns a single S3 Connector",
                "operationId": "getS3Connector",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectorId",
                        "in": "path",
                        "description": "The Connector ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find S3 Connector"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Connector"
                ],
                "summary": "Update an existing S3 Connector",
                "description": "Updates an existing S3 Connector",
                "operationId": "updateS3Connector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectorId",
                        "in": "path",
                        "description": "The Connector ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "s3Connector",
                        "description": "The update configuration of existing S3 Connector.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/S3Connector"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "S3 Connector could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find S3 Connector"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Connector"
                ],
                "summary": "Delete the S3 Connector",
                "description": "Delete the S3 Connector",
                "operationId": "deleteS3Connector",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectorId",
                        "in": "path",
                        "description": "The Connector ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "S3 successfully deleted"
                    },
                    "400": {
                        "description": "S3 Connector could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find S3 Connector"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/installer/info": {
            "get": {
                "tags": [
                    "Installer"
                ],
                "summary": "Get installer information",
                "description": "Provides basic information about the installer",
                "operationId": "getInstallerInfo",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Provide system information about the installer",
                        "schema": {
                            "$ref": "#/definitions/ServerInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/cpu": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Returns CPU performance metrics",
                "description": "Returns collected CPU performance metrics for the container or containers Time parameter should be given in search parameters to filter the results. Time parameter is defined as milliseconds ",
                "operationId": "getCPUKpis",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "\"The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of CPU metrics",
                        "schema": {
                            "$ref": "#/definitions/CPUKpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/disk": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Returns disk read and write performance metrics",
                "description": "Returns collected  disk read and write performance metrics for the container or containers Time parameter should be given in search parameters to filter the results. Time parameter is defined as milliseconds ",
                "operationId": "getDiskKpis",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "\"The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of disk performance metrics",
                        "schema": {
                            "$ref": "#/definitions/DiskKpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/measurements": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Query the database for the list of supported Port KPI measurement names",
                "description": "Queries the database for the list of supported Port KPI measurement names",
                "operationId": "getKpiMeasurements",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "\"The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Save KPI measurement",
                "description": "Save KPI measurement",
                "operationId": "addKpiMeasurement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "kpiMeasurement",
                        "description": "KPI Measurement Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "201": {
                        "description": "KPI Measurement successfully saved.",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "400": {
                        "description": "KPI Measurement could not be saved."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/measurements/monitored": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Query the database for the list of supported Port KPI measurement names that are currently monitored by an alarm config instance",
                "description": "Query the database for the list of supported Port KPI measurement names that are currently monitored by an alarm config instance",
                "operationId": "getMonitoredKpiMeasurements",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/measurements/{kpiMeasurementId}": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Get KPI Measurement",
                "description": "Get KPI Measurement",
                "operationId": "getKPIMeasurement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "kpiMeasurementId",
                        "in": "path",
                        "description": "The KPI Measurement ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Update an existing KPI Measurement",
                "description": "Updates an existing KPI Measurement",
                "operationId": "updateKPIMeasurement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "kpiMeasurementId",
                        "in": "path",
                        "description": "The KPI Measurement ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "kpiMeasurement",
                        "description": "The updated KPI Measurement",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "201": {
                        "description": "KPI Measurement successfully updated",
                        "schema": {
                            "$ref": "#/definitions/KpiMeasurement"
                        }
                    },
                    "400": {
                        "description": "KPI Measurement could not be updated"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "KPI Measurement not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Delete the KPI Measurement",
                "description": "Delete the KPI Measurement",
                "operationId": "deleteKPIMeasurement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "kpiMeasurementId",
                        "in": "path",
                        "description": "The KPI Measurement ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "KPI Measurement successfully deleted"
                    },
                    "400": {
                        "description": "KPI Measurement could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/memory": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Returns memory performance metrics",
                "description": "Returns collected memory performance metrics for the container or containers Time parameter should be given in search parameters to filter the results. Time parameter is defined as milliseconds ",
                "operationId": "getMemoryKpis",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "\"The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of memory performance metrics",
                        "schema": {
                            "$ref": "#/definitions/MemoryKpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/network": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Returns network received and transmitted bytes performance metrics",
                "description": "Returns collected  network received and transmitted bytes metrics for the container or containers Time parameter should be given in search parameters to filter the results. Time parameter is defined as milliseconds ",
                "operationId": "getNetworkKpis",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of network performance metrics",
                        "schema": {
                            "$ref": "#/definitions/NetworkKpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/{measurement}": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Query the database for KPIs",
                "description": "Queries the database for KPIs and provides a result",
                "operationId": "getKpis",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "\"The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified measurement name does not exist"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/kpis/{measurement}/summary": {
            "get": {
                "tags": [
                    "Kpi"
                ],
                "summary": "Query the database for KPI metrics",
                "description": "Queries the database to return metrics for a particular KPI measurement",
                "operationId": "getKpiMetricsSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "weightingMethod",
                        "in": "query",
                        "description": "Specific weighting method for mean calculations (time)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "time"
                        ]
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "\"The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiMetricsSummary"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified measurement name does not exist."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all maintenance intervals",
                "description": "Get maintenance intervals",
                "operationId": "getMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Save a maintenance interval",
                "description": "Save maintenance interval",
                "operationId": "addMaintenanceInterval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "maintenanceInterval",
                        "description": "maintenance interval object to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "201": {
                        "description": "Maintenance interval is successfully saved",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "400": {
                        "description": "maintenance interval could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Constraint violation"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Returns a single maintenance interval",
                "description": "Get a  maintenance interval specified by id",
                "operationId": "getMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieve a maintenance interval specified by id",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the maintenance interval with given id"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Update an existing maintenance interval",
                "description": "Updates an existing maintenance interval",
                "operationId": "updateMaintenanceInterval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "maintenanceInterval",
                        "description": "The existing maintenance interval to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Maintenance interval could not be saved. Please verify the request with API specification"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the maintenance interval specified"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Delete the specified maintenance interval",
                "description": "Delete the specified maintenance interval",
                "operationId": "deleteMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "maintenance interval successfully deleted"
                    },
                    "400": {
                        "description": "maintenance interval could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    },
                    "409": {
                        "description": "maintenance interval is in use. Please reassign the maintenance interval before deleting"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-cards": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network cards the maintenance interval is applied to",
                "description": "Get all network cards associated with the maintenance interval",
                "operationId": "getNetworkCardsInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network cards associated with the maintenance interval",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Apply the maintenance interval to list of network cards",
                "description": "Apply the maintenance interval to a list of network card specified",
                "operationId": "applyMaintenanceIntervalToNetworkCards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkCards",
                        "description": "The network card ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Successfully applied maintenance interval to the list of network cards"
                    },
                    "400": {
                        "description": "Failed to apply maintenance interval to the list of network cards"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Remove one or multiple network cards from the maintenance interval",
                "description": "remove network cards from the maintenance interval",
                "operationId": "removeNetworkCardsFromMaintenanceInterval",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkCardList",
                        "description": "The network card ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "network cards successfully removed from the maintenance interval"
                    },
                    "400": {
                        "description": "failed to remove network cards from maintenance interval"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-cards/affected": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network cards affected by the maintenance interval",
                "description": "Get all network cards affected by the maintenance interval",
                "operationId": "getNetworkCardsAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network cards associated by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-cards/affected/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network cards overview affected by the maintenance interval",
                "description": "Get all network cards overview affected by the maintenance interval",
                "operationId": "getNetworkCardsOverviewAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network cards overview associated by the maintenance interval.",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-cards/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network cards overview the maintenance interval is applied to",
                "description": "Get all network cards overview associated with the maintenance interval",
                "operationId": "getNetworkCardsOverviewInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network cards overview associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkCardOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-connections": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network connections the maintenance interval is applied to",
                "description": "Get all network connections associated with the maintenance interval",
                "operationId": "getNetworkConnectionsInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network connections associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Apply the maintenance interval to a list of network connections",
                "description": "Apply the maintenance interval to the specified network connections",
                "operationId": "applyMaintenanceIntervalToNetworkConnections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkConnectionsList",
                        "description": "The list of network connection IDs.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Successfully applied maintenance interval to the network connections specified"
                    },
                    "400": {
                        "description": "Failed to apply maintenance interval to the list of network connections"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Remove one or multiple network connections from the maintenance interval",
                "description": "remove network connections from the maintenance interval",
                "operationId": "removeNetworkConnectionsFromMaintenanceInterval",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkConnectionList",
                        "description": "The network connection ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "202": {
                        "description": "network connections successfully removed from the maintenance interval"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "failed to remove network connections from maintenance interval"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-connections/affected": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network connections affected by the given maintenance interval",
                "description": "In addition to the directly applied maintenance interval, this API also returns all the connections affected by the maintenance interval. The rule to calculate the set of connections affected by a maintenance interval 1) If a network element is in maintenance interval, the connections riding on it are also affected 2) If a port is in maintenance, the connections riding on it are also affected ",
                "operationId": "getNetworkConnectionsAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network connections affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-connections/affected/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network connections overview affected by the given maintenance interval",
                "description": "In addition to the directly applied maintenance interval, this API also returns all the connections affected by the maintenance interval. The rule to calculate the set of connections affected by a maintenance interval 1) If a network element is in maintenance interval, the connections riding on it are also affected 2) If a port is in maintenance, the connections riding on it are also affected ",
                "operationId": "getNetworkConnectionsOverviewAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network connections overview affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-connections/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network connections overviews the maintenance interval is applied to",
                "description": "Get all network connectionss overviews associated with the maintenance interval. Returns the standard attributes of the Network Conenction entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Connection objects should be done via the standard /network-connection and /network-connection/{connectionId} endpoints ",
                "operationId": "getNetworkConnectionsOverviewInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network connections overview associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-elements": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network elements the maintenance interval is applied to",
                "description": "Get all network elements associated with the maintenance interval",
                "operationId": "getNetworkElementsInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network elements associated with the maintenance interval",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Apply the maintenance interval to list of network elements",
                "description": "Apply the maintenance interval to a list of network element specified",
                "operationId": "applyMaintenanceIntervalToNetworkElements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkElementList",
                        "description": "The network element ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Successfully applied maintenance interval to the list of network elements"
                    },
                    "400": {
                        "description": "Failed to apply maintenance interval to the list of network elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Remove one or multiple network elements from the maintenance interval",
                "description": "remove network elements from the maintenance interval",
                "operationId": "removeNetworkElementsFromMaintenanceInterval",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkElementList",
                        "description": "The network element ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "202": {
                        "description": "network elements successfully removed from the maintenance interval"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "failed to remove network elements from maintenance interval"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-elements/affected": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network elements affected by this maintenance interval",
                "description": "Get all network elements affected by this maintenance interval",
                "operationId": "getNetworkElementsAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network elements affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-external-links": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network external links the maintenance interval is applied to",
                "description": "Get all network external links associated with the maintenance interval",
                "operationId": "getNetworkExternalLinksInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network external links associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Apply the maintenance interval to a list of network external links",
                "description": "Apply the maintenance interval to a list of network external links",
                "operationId": "applyMaintenanceIntervalToNetworkExternalLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkExternalLinkList",
                        "description": "The list of network external links.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Successfully applied maintenance interval to a list of network external links"
                    },
                    "400": {
                        "description": "Failed to apply maintenance interval to a list of network external links"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Remove one or multiple network external links from the maintenance interval",
                "description": "remove network external links from the maintenance interval",
                "operationId": "removeNetworkExternalLinksFromMaintenanceInterval",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkLinkList",
                        "description": "The network external link ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "202": {
                        "description": "network external links successfully removed from the maintenance interval"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "failed to remove network external links from maintenance interval"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-external-links/affected": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network external links affected by the given maintenance interval",
                "description": "In addition to the maintenance interval directly applied to the given external link, this API also returns the set of external links affected. The rule to calculate is 1) If a network element is in maintenance interval, the external links riding on the network element are also affected 2) If a port is in maintenance interval, the external links on this port are also affected ",
                "operationId": "getNetworkExternalLinksAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network external links associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-external-links/affected/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network external link overviews affected by the given maintenance interval",
                "description": "In addition to the maintenance interval directly applied to the given external link, this API also returns the set of external links affected. The rule to calculate is 1) If a network element is in maintenance interval, the external links riding on the network element are also affected 2) If a port is in maintenance interval, the external links on this port are also affected ",
                "operationId": "getNetworkExternalLinksOverviewAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network external link overviews associated with the maintenance interval. ",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-external-links/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all network external link overviews the maintenance interval is applied to",
                "description": "Get all network external link overviews associated with the maintenance interval. Returns the standard attributes of the Network External Links entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network External Link objects should be done via the standard /network-external-link and /network-external-link/{externalLinkId} endpoints ",
                "operationId": "getNetworkExternalLinksOverviewInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network external link overviews associated with the maintenance interval. ",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-lightpaths": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network lightpaths the maintenance interval is applied to",
                "description": "Get all network lightpaths associated with the maintenance interval",
                "operationId": "getNetworkLightpathsInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network lightpaths associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Apply the maintenance interval to a list of network lightpaths",
                "description": "Apply the maintenance interval to the specified network lightpaths",
                "operationId": "applyMaintenanceIntervalToNetworkLightpaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkLightpathsList",
                        "description": "The list of network lightpaths IDs.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Successfully applied maintenance interval to the network lightpaths specified"
                    },
                    "400": {
                        "description": "Failed to apply maintenance interval to the list of network lightpaths"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Remove one or multiple network lightpaths from the maintenance interval",
                "description": "remove network lightpaths from the maintenance interval",
                "operationId": "removeNetworkLightpathsFromMaintenanceInterval",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkLightpathList",
                        "description": "The network lightpath ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "202": {
                        "description": "network lightpaths successfully removed from the maintenance interval"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "failed to remove network lightpaths from maintenance interval"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-lightpaths/affected": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network lightpaths affected by the given maintenance interval",
                "description": "In addition to the directly applied maintenance interval, this API also returns all the lightpaths affected by the maintenance interval. The rule to calculate the set of lightpaths affected by a maintenance interval 1) If a network element is in maintenance interval, the lightpaths riding on it are also affected 2) If a port is in maintenance, the lightpaths riding on it are also affected ",
                "operationId": "getNetworkLightpathsAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network lightpaths affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-lightpaths/affected/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network lightpaths overview affected by the given maintenance interval",
                "description": "In addition to the directly applied maintenance interval, this API also returns all the lightpaths affected by the maintenance interval. The rule to calculate the set of lightpaths affected by a maintenance interval 1) If a network element is in maintenance interval, the lightpaths riding on it are also affected 2) If a port is in maintenance, the lightpaths riding on it are also affected ",
                "operationId": "getNetworkLightpathsOverviewAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network lightpaths overview affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network lightpaths overviews the maintenance interval is applied to",
                "description": "Get all network lightpathss overviews associated with the maintenance interval. Returns the standard attributes of the Network Conenction entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Lightpath objects should be done via the standard /network-lightpath and /network-lightpath/{lightpathId} endpoints ",
                "operationId": "getNetworkLightpathsOverviewInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network lightpaths overview associated with the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-ports": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network ports the maintenance interval is applied to",
                "description": "Get all network ports associated with the maintenance interval",
                "operationId": "getNetworkPortsInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Apply the maintenance interval to a list of network ports",
                "description": "Apply the maintenance interval to a list of network ports",
                "operationId": "applyMaintenanceIntervalToNetworkPorts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkPortList",
                        "description": "The list of network ports",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Successfully applied maintenance interval to the list of network ports specified"
                    },
                    "400": {
                        "description": "Failed to apply maintenance interval to the list of network ports"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Remove one or multiple network ports from the maintenance interval",
                "description": "remove network ports from the maintenance interval",
                "operationId": "removeNetworkPortsFromMaintenanceInterval",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "The maintenance interval ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkPortList",
                        "description": "The network port ID list",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "202": {
                        "description": "network ports successfully removed from the maintenance interval"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "failed to remove network ports from maintenance interval"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find maintenance interval"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-ports/affected": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network ports affected by the maintenance interval",
                "description": "In addition to the directly applied maintenance intervals, this API also returns all the ports affected by the given maintenance interval. The rule to calculate the set of ports affected is 1) If the network element has the maintenance interval, then all the ports on network element are affected 2) If a connection has the maintenance interval, then all the ports along the connections are affected 3) If an external link has the maintenance interval, then all the ports on the A and Z end are affected ",
                "operationId": "getNetworkPortsAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network ports affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-ports/affected/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network ports overview affected by the maintenance interval",
                "description": "In addition to the directly applied maintenance intervals, this API also returns all the ports overview affected by the given maintenance interval. The rule to calculate the set of ports affected is 1) If the network element has the maintenance interval, then all the ports on network element are affected 2) If a connection has the maintenance interval, then all the ports along the connections are affected 3) If an external link has the maintenance interval, then all the ports on the A and Z end are affected ",
                "operationId": "getNetworkPortsOverviewAffectedByMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all network ports overviews affected by the maintenance interval.",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "maintenance interval could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/maintenance-intervals/{maintenanceIntervalId}/network-ports/overview": {
            "get": {
                "tags": [
                    "MaintenanceInterval"
                ],
                "summary": "Get all the network ports overivew the maintenance interval is applied to",
                "description": "Get all network ports overviews associated with the maintenance interval. Returns the standard attributes of the Network Port entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Port objects should be done via the standard /network-port and /network-port/{portId} endpoints ",
                "operationId": "getNetworkPortsOverviewInMaintenanceInterval",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maintenanceIntervalId",
                        "in": "path",
                        "description": "maintenance interval ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Cards",
                "description": "Get Network Cards",
                "operationId": "getNetworkCards",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Card",
                "description": "Save the Network Card",
                "operationId": "addNetworkCard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkCard",
                        "description": "The Network Card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "201": {
                        "description": "Network Card successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "400": {
                        "description": "Network Card could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network card",
                "description": "Get alarm status summary for network cards",
                "operationId": "getNetworkCardsAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/apply-alarm-profile/{alarmProfileId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a profile configuration to a group of cards",
                "description": "Apply a profile configuration to a group of cards",
                "operationId": "networkCardApplyAlarmProfileBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "cardIds",
                        "description": "List of cardIds to apply the profile to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully applied to Network Cards"
                    },
                    "400": {
                        "description": "Alarm Profile could not be applied to Network Cards"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/clear-alarm-profile/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the TCA profile for a group of cards",
                "description": "Clear the TCA profile for a group of cards",
                "operationId": "networkCardClearAlarmProfileBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "cardIds",
                        "description": "List of cardIds to apply the profile to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully cleared for Network Cards"
                    },
                    "400": {
                        "description": "Alarm Profile could not be cleared for Network Cards"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Cards",
                "description": "Get Network Cards Overview. Returns the standard attributes of the Network Card entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Cards objects should be done via the standard /network-cards and /network-cards/{cardId} endpoints ",
                "operationId": "getNetworkCardsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkCardOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Card",
                "description": "Get Network Card",
                "operationId": "getNetworkCard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Card",
                "description": "Updates an existing Network Card",
                "operationId": "updateNetworkCard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkCard",
                        "description": "The Network Card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Card",
                "description": "Delete the Network Card",
                "operationId": "deleteNetworkCard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Card successfully deleted"
                    },
                    "400": {
                        "description": "Network Card could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/affecting/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals directly applied or affecting this network card",
                "description": "Get all maintenance intervals directly applied or affecting this network card",
                "operationId": "getMaintenanceIntervalsAffectingNetworkCard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status records for a given Network Card",
                "description": "Get all Alarm Status records for a given Network Card",
                "operationId": "getNetworkCardAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status Overview records for a given Network Card",
                "description": "Get Network Cards Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Cards objects should be done via the standard /network-cards and /network-cards/{cardId} endpoints ",
                "operationId": "getNetworkCardAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network card",
                "description": "Get alarm status summary for a given network card",
                "operationId": "getNetworkCardAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/forecasted-kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Query the database for forecasted KPIs related to a specific Network Card Object",
                "description": "Queries the database for forecasted KPIs related to a specific Network Card Object ",
                "operationId": "getForecastedKpisByNetworkCardId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Query the database for KPIs related to a specific Network Card Object",
                "description": "Queries the database for KPIs related to a specific Network Card Object",
                "operationId": "getKpisByNetworkCardId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/kpis/{measurement}/fft": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Perform a Fast Fourier Transform (FFT) for KPIs related to a specific Network Card Object",
                "description": "This API computes the FFT over a series of data points and produces a list of amplitude and phase values for the set of frequencies represented by the data.  See /network-ports/{portId}/kpis/{measurement}/fft for more details ",
                "operationId": "getKpiFourierTransformByNetworkCardId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "padding",
                        "in": "query",
                        "description": "Enable or disable zero padding of time series during FFT computation",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiFourier"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/kpis/{measurement}/histogram": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Generate histogram data for KPIs related to a specific Network Card Object",
                "description": "Generates a list of bins which represent a histogram of the KPIs that match the supplied parameters See /network-ports/{portId}/kpis/{measurement}/histogram for more details ",
                "operationId": "getKpiHistogramByNetworkCardId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "binCount",
                        "in": "query",
                        "description": "Set the number of histogram bins to generate. This overrides the default bin count selection algorithm.",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiHistogramPaginationList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified card or measurement could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/kpis/{measurement}/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Summarize the KPIs related to a specific Network Card Object",
                "description": "Summarize the KPIs related to a specific Network Card Object.  See /network-ports/{portId}/kpis/{measurement}/summary for more details ",
                "operationId": "getKpiSummaryByNetworkCardId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiSummary"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals applied on the network card",
                "description": "Get all maintenance intervals on a given network card",
                "operationId": "getNetworkCardMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-cards/{cardId}/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Card Overview",
                "description": "Get Network Card Overview. Returns the standard attributes of the Network Card entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Cards objects should be done via the standard /network-cards and /network-cards/{cardId} endpoints ",
                "operationId": "getNetworkCardOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "The Network Card ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkCardOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The Network Card not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections",
                "description": "Get Network Connections",
                "operationId": "getNetworkConnections",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Connections",
                "description": "Save Network Connections",
                "operationId": "addNetworkConnection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkConnection",
                        "description": "The Network Connection.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "201": {
                        "description": "Network Connection successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "400": {
                        "description": "Network Connection could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/connection-trends": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all network connections with connection trend data matching the specified measurement",
                "description": "Get all network connections with connection trend data matching the specified measurement",
                "operationId": "getNetworkConnectionsLevelMeasurement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "level",
                        "in": "path",
                        "description": "level of the connections",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "queried measurement",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "400": {
                        "description": "Network connections with connection trend data matching should be queried with level and measurement parameters. "
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/connection-trends-summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections Trends Summary",
                "description": "Get Network Connections Trends Summary",
                "operationId": "getNetworkConnectionsTrendsSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Network Connections Trends Summary gathered",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionTrendSummaryList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/connection-trends/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all network connections overview with connection trend data matching the specified measurement",
                "description": "Get all network connections overview with connection trend data matching the specified measurement",
                "operationId": "getNetworkConnectionsOverviewLevelMeasurement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "level",
                        "in": "path",
                        "description": "level of the connections",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "queried measurement",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "400": {
                        "description": "Network connections with connection trend data matching should be queried with level and measurement parameters. "
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections Overview",
                "description": "Get Network Connections Overview.  Returns the standard attributes of the Network Connection entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Connections objects should be done via the standard /network-connections and /network-connections/{connectionId} endpoints ",
                "operationId": "getNetworkConnectionsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connection",
                "description": "Get Network Connection",
                "operationId": "getNetworkConnection",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Connection",
                "description": "Updates an existing Network Connection",
                "operationId": "updateConnection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkConnection",
                        "description": "The updated Network Connection.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "201": {
                        "description": "Network connection successfully updated",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "400": {
                        "description": "Network connection could not be updated"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network connection not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Connection",
                "description": "Delete the Network Connection",
                "operationId": "deleteNetworkConnection",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Connection successfully deleted"
                    },
                    "400": {
                        "description": "Network Connection could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/affecting/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals directly applied or indirectly affecting on the network connection",
                "description": "Get all maintenance intervals directly applied or indirectly affecting on a given network connection",
                "operationId": "getMaintenanceIntervalsAffectingNetworkConnection",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The network connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all alarm status records for a given network connection",
                "description": "Get all alarm status records for a given network connection",
                "operationId": "getNetworkConnectionAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all alarm status overview records for a given network connection",
                "description": "Get Network Connection Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Connection objects should be done via the standard /network-connections and /network-connections/{connectionId} endpoints ",
                "operationId": "getNetworkConnectionAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network connection",
                "description": "Get alarm status summary for a given network connection",
                "operationId": "getNetworkConnectionAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/apply-alarm-profile": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a profile configuration to all ports associated to the network connection",
                "description": "Apply a profile configuration to all ports associated to the network connection",
                "operationId": "networkConnectionsApplyAlarmProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "alarmProfileId",
                        "description": "The Alarm Profile ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully applied to network connection"
                    },
                    "400": {
                        "description": "Alarm Profile could not be applied to network connection"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/clear-alarm-profile": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the TCA profile for all ports associated to the network connection",
                "description": "Clear the TCA profile for all ports associated to the network connection",
                "operationId": "networkConnectionsClearAlarmProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully cleared for network connection"
                    },
                    "400": {
                        "description": "Alarm Profile could not be cleared for network connection"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/connection-trends": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all network connection trend records for a given network connection",
                "description": "Get all connection trends for a given network connection",
                "operationId": "getNetworkConnectionTrends",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionTrendList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals applied on the network connection",
                "description": "Get all maintenance intervals on a given network connection",
                "operationId": "getNetworkConnectionMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The network connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-elements": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Elements by Network Connection ID",
                "description": "Get Network Elements by Network Connection ID",
                "operationId": "getNetworkElementsByNetworkConnectionId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-external-links": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links by Network Connection ID",
                "description": "Get Network External Links by Network Connection ID",
                "operationId": "getNetworkExternalLinksByNetworkConnectionId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-groups": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Add a network connection to a a list of network groups",
                "description": "Add a network connection to a list of network groups",
                "operationId": "addNetworkConnectionToNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Network Connection successfully updated with Network Groups"
                    },
                    "400": {
                        "description": "Network Connection failed to be updated with Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Connection could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Replace a Network Connection's assigned groups with the ones in the provided list",
                "description": "Replace a Network Connection's assigned groups with the ones in the provided list",
                "operationId": "updateNetworkConnectionWithNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Network Connection successfully added to Network Groups"
                    },
                    "400": {
                        "description": "Network Connection failed to be added to Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Connection could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a network connection from a list of network groups",
                "description": "Delete a network connection from a list of network groups",
                "operationId": "removeNetworkConnectionFromNetworkGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Connection successfully removed from Network Groups"
                    },
                    "400": {
                        "description": "Network Connection failed to be removed from Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Connection could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-lightpaths": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths by Network Connection ID",
                "description": "Get Network Lightpaths by Network Connection ID",
                "operationId": "getNetworkLightpathsByNetworkConnectionId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create or update the list of Network Lightpaths associated to the Network Connection.",
                "description": "Create or update the list of Network Lightpaths associated to the Network Connection.  Any previous Network Lightpath object list will be overwritten. ",
                "operationId": "setNetworkLightpathsForNetworkConnection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The unique Network Connection identifier of the connection to be modified.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "lightpathIdList",
                        "description": "The Lightpath ID List",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Network Lightpath objects successfully associated to the Network Connection."
                    },
                    "400": {
                        "description": "Network Lightpath object list could not be saved."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths Overview by Network Connection ID",
                "description": "Get Network Lightpaths Overview by Network Connection Id. Returns the standard attributes of the Network Lightpath entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Lightpath objects should be done via the standard /network-lightpaths and /network-lightpaths/{portId} endpoints ",
                "operationId": "getNetworkLightpathsOverviewByNetworkConnectionId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-ports": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports by Network Connection ID",
                "description": "Get Network Ports by Network Connection ID",
                "operationId": "getNetworkPortsByNetworkConnectionId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create or update the list of Network Ports associated to the Network Connection.",
                "description": "Create or update the list of Network Ports associated to the Network Connection.  The order of the Network Port UUID values is significant.  This order defines the intended connection path order from A to Z.  Any previous Network Port object list will be overwritten. ",
                "operationId": "setNetworkPortsForNetworkConnection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The unique Network Connection identifier of the connection to be modified.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "portIdList",
                        "description": "The Port ID List",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Network Port objects successfully associated to the Network Connection."
                    },
                    "400": {
                        "description": "Network Port object list could not be saved."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/network-ports/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports Overview by Network Connection ID",
                "description": "Get Network Ports Overview by Network Connection Id. Returns the standard attributes of the Network Ports entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Ports objects should be done via the standard /network-ports and /network-ports/{portId} endpoints ",
                "operationId": "getNetworkPortsOverviewByNetworkConnectionId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-connections/{connectionId}/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connection Overview",
                "description": "Get Network Connection Overview",
                "operationId": "getNetworkConnectionOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "connectionId",
                        "in": "path",
                        "description": "The Network Connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-domains": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get All Network Domains",
                "description": "Get Network Domains",
                "operationId": "getNetworkDomains",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Domain",
                "description": "Save the Network Domain",
                "operationId": "addNetworkDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkDomain",
                        "description": "The Network Domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    "201": {
                        "description": "Network Domain successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    "400": {
                        "description": "Network Domain could not be saved. Please refer to the API specifications"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "gNMI or SNMP configuration could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-domains/{networkDomainId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Returns a single network domain",
                "description": "Get Network Domain",
                "operationId": "getNetworkDomain",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkDomainId",
                        "in": "path",
                        "description": "The Network Domain ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Domain could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Domain",
                "description": "Updates an existing Network Domain",
                "operationId": "updateNetworkDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkDomainId",
                        "in": "path",
                        "description": "The Network Domain ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkDomain",
                        "description": "The updated Existing Network Domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network Domain could not be saved. Please refer to the API specifications"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The network domain could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Domain",
                "description": "Delete the Network Domain",
                "operationId": "deleteNetworkDomain",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkDomainId",
                        "in": "path",
                        "description": "The Network Domain ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Domain successfully deleted"
                    },
                    "400": {
                        "description": "Network Domain could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network domain is not found"
                    },
                    "409": {
                        "description": "Network Domain is in use"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-domains/{networkDomainId}/reset-alarm-profiles": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Reset all ports in this domain to use the default alarm profiles",
                "description": "Reset Network Domain Alarm Profiles",
                "operationId": "resetNetworkDomainAlarmProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "networkDomainId",
                        "in": "path",
                        "description": "domainId to be reset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "The operation was successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Domain could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-filter-rules": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get All Filter Rules",
                "description": "Get All Filter Rules",
                "operationId": "getNetworkElementFilterRules",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Add a filter rule to a NMS data source",
                "description": "Add a filter rule to a NMS data source",
                "operationId": "addNetworkElementFilterRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filterRule",
                        "description": "The filter rule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    "201": {
                        "description": "Filter rule successfully applied to network manager",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    "400": {
                        "description": "Filter rule could not be applied to network manager"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-filter-rules/{filterRuleId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get a single Network Element filter rule",
                "description": "Get a single Network Element filter rule",
                "operationId": "getNetworkElementFilterRule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filterRuleId",
                        "in": "path",
                        "description": "The Filter Rule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element filter rule could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Element Filter Rule",
                "description": "Updates an existing Network Element Filter Rule",
                "operationId": "updateFilterRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filterRuleId",
                        "in": "path",
                        "description": "The Filter Rule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filterRule",
                        "description": "The Filter Rule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated filter rule",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Filter rule could not be updated. Please refer to the API specifications"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Filter rule could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Element Filter Rule",
                "description": "Delete the Network Element Filter Rule",
                "operationId": "deleteFilterRule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filterRuleId",
                        "in": "path",
                        "description": "The Filter Rule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Element Filter Rule successfully deleted"
                    },
                    "400": {
                        "description": "Network Element Filter Rule could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element Filter Rule could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-gnmi-configs": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get All Network Element gNMI Configurations",
                "description": "Get Network Element gNMI configs",
                "operationId": "getNetworkElementGnmiConfigs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Element gNMI Config",
                "description": "Save the Network Element gNMI configuration",
                "operationId": "addNetworkElementGnmiConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkElementGnmiConfig",
                        "description": "The Network Element gNMI configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    "201": {
                        "description": "Network Element gNMI Config successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    "400": {
                        "description": "Network Element gNMI Config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-gnmi-configs/{networkElementGnmiConfigId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Returns a single Network Element gNMI Config",
                "description": "Get Network Element gNMI Config",
                "operationId": "getNetworkElementGnmiConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementGnmiConfigId",
                        "in": "path",
                        "description": "The Network Element gNMI Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Element gNMI Config",
                "description": "Updates an existing Network Element gNMI Configuration",
                "operationId": "updateNetworkElementGnmiConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementGnmiConfigId",
                        "in": "path",
                        "description": "The Network Element gNMI Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkElementGnmiConfig",
                        "description": "The updated Existing Network Element gNMI Config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementGnmiConfig"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network Element gNMI Config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Element gNMI Config",
                "description": "Delete the Network Element gNMI Configuration",
                "operationId": "deleteNetworkElementGnmiConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementGnmiConfigId",
                        "in": "path",
                        "description": "The Network Element gNMI Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Element gNMI Config successfully deleted"
                    },
                    "400": {
                        "description": "Network Element gNMI Config could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find gNMI config"
                    },
                    "409": {
                        "description": "gNMI Config is in use. To delete gNMI config please reassign the Network Elements and Network Domain objects"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-pm-bin-configs": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get All Network Element PM Bin Configurations",
                "description": "Get Network Element PM Bin configs",
                "operationId": "getNetworkElementPmBinConfigs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Element PM Bin Config",
                "description": "Save the Network Element PM Bin configuration",
                "operationId": "addNetworkElementPmBinConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkElementPmBinConfig",
                        "description": "The Network Element PM Bin configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementPmBinConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementPmBinConfig"
                        }
                    },
                    "201": {
                        "description": "Network Element PM Bin Config successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementPmBinConfig"
                        }
                    },
                    "400": {
                        "description": "Network Element PM Bin Config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-pm-bin-configs/{networkElementPmBinConfigId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Returns a single Network Element PM Bin Config",
                "description": "Get Network Element PM Bin Config",
                "operationId": "getNetworkElementPmBinConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementPmBinConfigId",
                        "in": "path",
                        "description": "The Network Element PM Bin Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementPmBinConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Element PM Bin Config",
                "description": "Updates an existing Network Element PM Bin Configuration",
                "operationId": "updateNetworkElementPmBinConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementPmBinConfigId",
                        "in": "path",
                        "description": "The Network Element PM Bin Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkElementPmBinConfig",
                        "description": "The updated Existing Network Element gNPM BinMI Config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementPmBinConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementPmBinConfig"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network Element PM Bin Config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Element PM Bin Config",
                "description": "Delete the Network Element PM Bin Configuration",
                "operationId": "deleteNetworkElementPmBinConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementPmBinConfigId",
                        "in": "path",
                        "description": "The Network Element PM Bin Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Element PM Bin Config successfully deleted"
                    },
                    "400": {
                        "description": "Network Element PM Bin Config could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find PM Bin config"
                    },
                    "409": {
                        "description": "PM Bin Config is in use. To delete PM Bin config please reassign the Network Elements and Network Domain objects"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-snmp-configs": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get All Network Element SNMP Configurations",
                "description": "Get Network Element SNMP configs",
                "operationId": "getNetworkElementSnmpConfigs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Element SNMP Config",
                "description": "Save the Network Element SNMP Configuration",
                "operationId": "addNetworkElementSnmpConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkElementSnmpConfig",
                        "description": "The Network Element SNMP Configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    "201": {
                        "description": "Network Element SNMP Config successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    "400": {
                        "description": "Network Element SNMP Config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-element-snmp-configs/{networkElementSnmpConfigId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Returns a single Network Element SNMP Config",
                "description": "Get Network Element SNMP Config",
                "operationId": "getNetworkElementSnmpConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementSnmpConfigId",
                        "in": "path",
                        "description": "Network Element SNMP Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find SNMP config"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Element SNMP Config",
                "description": "Updates an existing Network Element SNMP Config",
                "operationId": "updateNetworkElementSnmpConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementSnmpConfigId",
                        "in": "path",
                        "description": "Network Element SNMP Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkElementSnmpConfig",
                        "description": "The updated Existing Network Element SNMP Config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementSnmpConfig"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network Element SNMP Config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Element SNMP Config",
                "description": "Delete the Network Element SNMP Configuration",
                "operationId": "deleteNetworkElementSnmpConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkElementSnmpConfigId",
                        "in": "path",
                        "description": "The Network Element SNMP Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Element SNMP Config successfully deleted"
                    },
                    "400": {
                        "description": "Network Element SNMP Config could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find SNMP config"
                    },
                    "409": {
                        "description": "SNMP Config is in use. To delete SNMP config please reassign the Network Elements and Network Domain objects"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Elements",
                "description": "Get Network Elements",
                "operationId": "getNetworkElements",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \\\"field1 OP value1 && field2 OP value2\\\" OR \\\"field1 OP value1 || field2 OP value2\\\" where OP could be: =, !=, :, !:, >, <\\\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Element",
                "description": "Save the Network Element",
                "operationId": "addNetworkElement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkElement",
                        "description": "The Network Element",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "201": {
                        "description": "Network Element successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "400": {
                        "description": "Network Element could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/apply-alarm-profile/{alarmProfileId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a profile configuration to a group of network elements",
                "description": "Apply a profile configuration to a group of network elements",
                "operationId": "networkElementApplyAlarmProfileBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "The Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs to apply the profile to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully applied to Network Elements"
                    },
                    "400": {
                        "description": "Alarm Profile could not be applied to Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/apply-gnmi-config/{gnmiConfigId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a gNMI configuration to a group of network elements",
                "description": "Apply a gNMI configuration to a group of network elements",
                "operationId": "networkElementApplyGnmiConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "gnmiConfigId",
                        "in": "path",
                        "description": "The gNMI Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs to apply the config to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "gNMI Config successfully applied to Network Elements"
                    },
                    "400": {
                        "description": "gNMI Config could not be applied to Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "gNMI Config does not exist"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/apply-pmbin-config/{pmBinConfigId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a PM Bin configuration to a group of network elements",
                "description": "Apply a PM Bin configuration to a group of network elements",
                "operationId": "networkElementApplyPmBinConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "pmBinConfigId",
                        "in": "path",
                        "description": "The PM Bin Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs to apply the config to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "PM Bin Config successfully applied to Network Elements"
                    },
                    "400": {
                        "description": "PM Bin Config could not be applied to Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "PM Bin Config does not exist"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/apply-snmp-config/{snmpConfigId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply an SNMP configuration to a group of network elements",
                "description": "Apply an SNMP configuration to a group of network elements",
                "operationId": "networkElementApplySnmpConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "snmpConfigId",
                        "in": "path",
                        "description": "The SNMP Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs to apply the config to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "SNMP Config successfully applied to Network Elements"
                    },
                    "400": {
                        "description": "SNMP Config could not be applied to Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "SNMP Config does not exist"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/apply-weather-config/{weatherConfigId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a weather configuration to a group of network elements",
                "description": "Apply a weather configuration to a group of network elements",
                "operationId": "networkElementApplyWeatherConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "weatherConfigId",
                        "in": "path",
                        "description": "The weather Config ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs to apply the config to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "weather Config successfully applied to Network Elements"
                    },
                    "400": {
                        "description": "weather Config could not be applied to Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "weather Config does not exist"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/clear-alarm-profile/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the TCA profile for a group of network elements",
                "description": "Clear the TCA profile for a group of network elements",
                "operationId": "networkElementClearAlarmProfileBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs whose profiles will be cleared",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully cleared for Network Elements"
                    },
                    "400": {
                        "description": "Alarm Profile could not be cleared for Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/clear-gnmi-config/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the gNMI configuration for a group of network elements",
                "description": "Clear the gNMI configuration for a group of network elements",
                "operationId": "networkElementClearGnmiConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs from which to clear the config",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "gNMI Config successfully cleared from Network Elements"
                    },
                    "400": {
                        "description": "gNMI Config could not be cleared from Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/clear-pmbin-config/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the PM Bin configuration for a group of network elements",
                "description": "Clear the PM Bin configuration for a group of network elements",
                "operationId": "networkElementClearPmBinConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs from which to clear the config",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "PM Bin Config successfully cleared from Network Elements"
                    },
                    "400": {
                        "description": "PM Bin Config could not be cleared from Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/clear-snmp-config/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the SNMP configuration for a group of network elements",
                "description": "Clear the SNMP configuration for a group of network elements",
                "operationId": "networkElementClearSnmpConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs from which to clear the config",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "SNMP Config successfully cleared from Network Elements"
                    },
                    "400": {
                        "description": "SNMP Config could not be cleared from Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/clear-weather-config/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the weather configuration for a group of network elements",
                "description": "Clear the weather configuration for a group of network elements",
                "operationId": "networkElementClearWeatherConfigBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "elementIds",
                        "description": "The list of Network Element IDs from which to clear the config",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "weather Config successfully cleared from Network Elements"
                    },
                    "400": {
                        "description": "weather Config could not be cleared from Network Elements"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Elements",
                "description": "Get Network Elements Overview. Returns the standard attributes of the Network Elements entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Elements objects should be done via the standard /network-elements and /network-elements/{elementId} endpoints ",
                "operationId": "getNetworkElementsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Element",
                "description": "Get Network Element",
                "operationId": "getNetworkElement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Element",
                "description": "Updates an existing Network Element",
                "operationId": "updateNetworkElement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkElement",
                        "description": "The updated Network Element.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Element",
                "description": "Delete the Network Element",
                "operationId": "deleteNetworkElement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Element successfully deleted"
                    },
                    "400": {
                        "description": "Network Element could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/affecting/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals directly applied or indirectly affecting this network element",
                "description": "Get all directly applied or indirectly affecting maintenance intervals on this network element",
                "operationId": "getMaintenanceIntervalsAffectingNetworkElement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status records for a given Network Element,",
                "description": "Get all Alarm Status records for a given Network Element",
                "operationId": "getNetworkElementAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status Overview records for a given Network Element,",
                "description": "Get Network Element Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Element objects should be done via the standard /network-elements and /network-elements/{elementId} endpoints ",
                "operationId": "getNetworkElementAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network element",
                "description": "Get alarm status summary for a given network element",
                "operationId": "getNetworkElementAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/apply-alarm-profile": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a profile configuration to all ports associated to the Network Element",
                "description": "Apply a profile configuration to all ports associated to the Network Element",
                "operationId": "networkElementApplyAlarmProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "alarmProfileId",
                        "description": "The Alarm Profile Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Alarm Profile successfully applied to Network Element"
                    },
                    "400": {
                        "description": "Alarm Profile could not be applied to Network Element"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/clear-alarm-profile": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the TCA profile for all ports associated to the Network Element",
                "description": "Clear the TCA profile for all ports associated to the Network Element",
                "operationId": "networkElementClearAlarmProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully cleared for Network Element"
                    },
                    "400": {
                        "description": "Alarm Profile could not be cleared for Network Element"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/connectivity-state": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Element Connectivity State",
                "description": "Gets Network Element connectivity state. Returns the connectivity state for the Network Element, list of configured protocols with their state, detailed state. ",
                "operationId": "getNetworkElementConnectivityState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/ProtocolConnectivityStateList"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element object could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/forecasted-kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Query the database for forecasted KPIs related to a specific Network Element Object",
                "description": "Queries the database for forecasted KPIs related to a specific Network Element Object ",
                "operationId": "getForecastedKpisByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Query the database for KPIs related to a specific Network Element Object",
                "description": "Queries the database for KPIs related to a specific Network Element Object",
                "operationId": "getKpisByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/kpis/{measurement}/fft": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Perform a Fast Fourier Transform (FFT) for KPIs related to a specific Network Element Object",
                "description": "This API computes the FFT over a series of data points and produces a list of amplitude and phase values for the set of frequencies represented by the data.  See /network-ports/{portId}/kpis/{measurement}/fft for more details ",
                "operationId": "getKpiFourierTransformByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "padding",
                        "in": "query",
                        "description": "Enable or disable zero padding of time series during FFT computation. ",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "The request could not be completed due to an issue with the data series."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified card or measurement could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/kpis/{measurement}/histogram": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Generate histogram data for KPIs related to a specific Network Element Object",
                "description": "Generates a list of bins which represent a histogram of the KPIs that match the supplied parameters See /network-ports/{portId}/kpis/{measurement}/histogram for more details ",
                "operationId": "getKpiHistogramByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "binCount",
                        "in": "query",
                        "description": "Set the number of histogram bins to generate. This overrides the default bin count selection algorithm. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified card or measurement could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/kpis/{measurement}/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Summarize the KPIs related to a specific Network Element Object",
                "description": "Summarize the KPIs related to a specific Network Element Object.  See /network-ports/{portId}/kpis/{measurement}/summary for more details ",
                "operationId": "getKpiSummaryByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals applied on the network element",
                "description": "Get all maintenance intervals on a given network element",
                "operationId": "getNetworkElementMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-cards": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Cards by Network Element ID",
                "description": "Get Network Cards by Network Element ID",
                "operationId": "getNetworkCardsByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-connections": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections by Network Element ID",
                "description": "Get Network Connections by Network Element ID",
                "operationId": "getNetworkConnectionsByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-connections/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections Overview by Network Element ID",
                "description": "Get Network Connections Overview by Network Element Id. Returns the standard attributes of the Network Connections entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Connection objects should be done via the standard /network-connections and /network-connections/{connectionId} endpoints ",
                "operationId": "getNetworkConnectionsOverviewByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-external-links": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links by Network Element ID",
                "description": "Get Network External Links by Network Element ID",
                "operationId": "getNetworkExternalLinksByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-external-links/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links by Network Element Id",
                "description": "Get Network External Links by Network Element Id. Returns the standard attributes of the Network External Links entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network External Link objects should be done via the standard /network-external-link and /network-external-link/{externalLinkId} endpoints ",
                "operationId": "getNetworkExternalLinksOverviewByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-groups": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Add a network element to a list of network groups",
                "description": "Add a network element to a list of network groups",
                "operationId": "addNetworkElementToNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Network Element successfully updated with Network Groups"
                    },
                    "400": {
                        "description": "Network Element failed to be updated with Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Replace a Network Element's assigned groups with the ones in the provided list",
                "description": "Replace a Network Element's assigned groups with the ones in the provided list",
                "operationId": "updateNetworkElementWithNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Network Element successfully added to Network Groups"
                    },
                    "400": {
                        "description": "Network Element failed to be added to Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a network element from a list of network groups",
                "description": "Delete a network element from a list of network groups",
                "operationId": "removeNetworkElementFromNetworkGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Element successfully removed from Network Groups"
                    },
                    "400": {
                        "description": "Network Element failed to be removed from Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-lightpaths": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths by Network Element ID",
                "description": "Get Network Lightpaths by Network Element ID",
                "operationId": "getNetworkLightpathsByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths Overview by Network Element ID",
                "description": "Get Network Lightpaths Overview by Network Element Id. Returns the standard attributes of the Network Lightpaths entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Lightpaths objects should be done via the standard /network-lightpaths and /network-lightpaths/{lightpathId} endpoints ",
                "operationId": "getNetworkLightpathsOverviewByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element object could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-ports": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports by Network Element ID",
                "description": "Get Network Ports by Network Element ID",
                "operationId": "getNetworkPortsByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/network-ports/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports Overview by Network Element ID",
                "description": "Get Network Ports Overview by Network Element Id. Returns the standard attributes of the Network Ports entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Ports objects should be done via the standard /network-ports and /network-ports/{portId} endpoints ",
                "operationId": "getNetworkPortsOverviewByNetworkElementId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-elements/{elementId}/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Element Overview",
                "description": "Get Network Element Overview. Returns the standard attributes of the Network Element entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Elements objects should be done via the standard /network-elements and /network-elements/{elementId} endpoints ",
                "operationId": "getNetworkElementOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "elementId",
                        "in": "path",
                        "description": "The Network Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links",
                "description": "Get Network External Links",
                "operationId": "getNetworkExternalLinks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network External Link",
                "description": "Save Network External Link",
                "operationId": "addNetworkExternalLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkExternalLink",
                        "description": "Network External Link ID",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "201": {
                        "description": "Network External Link successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "400": {
                        "description": "Network External Link could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links Overview",
                "description": "Get Network External Links Overview. Returns the standard attributes of the Network External Links entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network External Link objects should be done via the standard /network-external-link and /network-external-link/{externalLinkId} endpoints ",
                "operationId": "getNetworkExternalLinksOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Link",
                "description": "Get Network External Link",
                "operationId": "getNetworkExternalLink",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network External Link",
                "description": "Updates an existing Network External Link",
                "operationId": "updateNetworkExternalLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkExternalLink",
                        "description": "The updated Network Existing Link",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network External Link",
                "description": "Delete the Network External Link",
                "operationId": "deleteNetworkExternalLink",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network External Link successfully deleted"
                    },
                    "400": {
                        "description": "Network External Link could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/affecting/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals directly applied or indirectly affecting the network external link",
                "description": "Get all maintenance intervals directly applied or indirectly affecting a given network external link",
                "operationId": "getMaintenanceIntervalsAffectingNetworkExternalLinks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status records for a given Network External Link,",
                "description": "Get all Alarm Status records for a given Network External Link",
                "operationId": "getNetworkExternalLinkAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status Overview records for a given Network External Link,",
                "description": "Get Network External Link Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network External Link objects should be done via the standard /network-external-links and /network-external-links/{externalLinkId} endpoints ",
                "operationId": "getNetworkExternalLinkAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network external link",
                "description": "Get alarm status summary for a given network external link",
                "operationId": "getNetworkExternalLinkAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals applied on the network external link",
                "description": "Get all maintenance intervals on a given network external link",
                "operationId": "getNetworkExternalLinkMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network connection ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/network-groups": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Add an external link to a list of network groups",
                "description": "Add an external link to a list of network groups",
                "operationId": "addExternalLinkToNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "groupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "External Link successfully updated with Network Groups"
                    },
                    "400": {
                        "description": "External Link failed to be updated with Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "External Link could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Replace the External Link's assigned groups with the ones in the provided list",
                "description": "Replace the External Link's assigned groups with the ones in the provided list",
                "operationId": "updateExternalLinkWithNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "groupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "External Link successfully added to Network Groups"
                    },
                    "400": {
                        "description": "External Link failed to be added to Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "External Link could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete an External Link from a list of network groups",
                "description": "Delete an External Link from a list of network groups",
                "operationId": "removeExternalLinkFromNetworkGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "groupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "External Link successfully removed from Network Groups"
                    },
                    "400": {
                        "description": "External Link failed to be removed from Network Groups"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "External Link could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/network-lightpaths": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths by Network External Link ID",
                "description": "Get Network Lightpaths by Network External Link ID",
                "operationId": "getNetworkLightpathsByNetworkExternalLinkId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths Overview by Network External Link ID",
                "description": "Get Network Lightpaths Overview by Network External Link Id. Returns the standard attributes of the Network Lightpath entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Lightpath objects should be done via the standard /network-lightpaths and /network-lightpaths/{portId} endpoints ",
                "operationId": "getNetworkLightpathsOverviewByNetworkExternalLinkId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-scans": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all available OTDR scans on a given Network external Link",
                "description": "Get all OTDR scans on a given Network External Link",
                "operationId": "getNetworkExternalLinkOtdrScans",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Upload an OTDR scan file on a given Network External Link",
                "description": "Upload an OTDR scan file on a given Network External Link",
                "operationId": "postNetworkExternalLinkOtdrScan",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "otdrFile",
                        "in": "formData",
                        "description": "otdrFile",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The scan direction",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "AZ",
                            "ZA"
                        ]
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The file format (json, sor)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "sor",
                            "json"
                        ]
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "description": "The scan start timestamp (as an epoch value in ms). If not provided, it will be taken from the file contents (date from Fixed Parameters Block). ",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "The label to use in the scan. If not provided, the file name (without extension) will be used ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanOverview"
                        }
                    },
                    "201": {
                        "description": "File successfully uploaded",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a list of OTDRs scans on a given Network External Link",
                "description": "Delete a list of OTDR scans on a given Network External Link",
                "operationId": "deleteNetworkExternalLinkOtdrScanList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "otdrScanList",
                        "description": "The list of OTDR Scans",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "OTDR scans successfully deleted"
                    },
                    "400": {
                        "description": "At least one OTDR scan cannot be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "At least one OTD scan cannot be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-scans/{scanId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get a specific OTDR scan on a given Network External Link",
                "description": "Get a specific OTDR scan on a given Network External link",
                "operationId": "getNetworkExternalLinkOtdrScan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR scan"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a specific OTDR scan on a given Network External Link",
                "description": "Delete a specific OTDR scan on a given Network External Link",
                "operationId": "deleteNetworkExternalLinkOtdrScan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "OTDR scan successfully deleted"
                    },
                    "400": {
                        "description": "Unexpected error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR scan"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-scans/{scanId}/baseline": {
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update the baseline condition of a specific OTDR scan on a given Network External Link",
                "description": "Update the baseline condition of a specific OTDR scan on a given Network External Link",
                "operationId": "setNetworkExternalLinkOtdrScanBaseline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "baseline",
                        "description": "The OTDR scan baseline condition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OtdrScanBaseline"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanOverview"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR scan"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-scans/{scanId}/download": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get the file report of an OTDR scan on a given Network External Link",
                "description": "Get the file report of a specific OTDR scan on a given Network External link",
                "operationId": "getNetworkExternalLinkOtdrScanDownload",
                "produces": [
                    "application/octet-stream",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The downloaded file format",
                        "required": false,
                        "type": "string",
                        "default": "sor",
                        "enum": [
                            "sor",
                            "json"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR scan"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-scans/{scanId}/report": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get the parsed report of an OTDR scan on a given Network External Link",
                "description": "Get the parsed report of a specific OTDR scan on a given Network External link",
                "operationId": "getNetworkExternalLinkOtdrScanReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR scan"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Network"
                ],
                "summary": "Update the report of an OTDR scan on a given Network External Link",
                "description": "Update the report of a specific OTDR scan on a given Network External Link",
                "operationId": "updateNetworkExternalLinkOtdrScanReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "otdrReportUpdate",
                        "description": "The Otdr Scan report patch payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OtdrReportUpdate"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-scans/{scanId}/revert": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Revert all the changes made to the report of an OTDR scan",
                "description": "Revert all the changes made to the report of an OTDR scan. The original report will be restored. ",
                "operationId": "restoreNetworkExternalLinkOriginalOtdrScanReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scanId",
                        "in": "path",
                        "description": "The OTDR scan ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR scan"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-schedules": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all available OTDR scan schedules on a given Network external Link",
                "description": "Get all OTDR scans schedules on a given Network External Link",
                "operationId": "getNetworkExternalLinkOtdrScanSchedules",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanScheduleOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Creates a new OTDR scan schedule",
                "description": "Creates a new OTDR scan schedule",
                "operationId": "addNetworkExternalLinkOtdrScanSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "otdrScanSchedule",
                        "description": "Network External Link OTDR schedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OtdrScanSchedule"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanScheduleOverview"
                        }
                    },
                    "201": {
                        "description": "OTDR scan successfully saved",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanScheduleOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/otdr-schedules/{scheduleId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get a specific OTDR scan schedule on a given Network External Link",
                "description": "Get a specific OTDR scan on a given Network External link",
                "operationId": "getNetworkExternalLinkOtdrScanSchedule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "The OTDR schedule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanScheduleOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR Scan Schedule"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an OTDR scan schedule",
                "description": "Update an OTDR scan schedule",
                "operationId": "updateNetworkExternalLinkOtdrScanSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The Network External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "The OTDR schedule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "otdrSchedule",
                        "description": "new value of the OTDR Scan Schedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OtdrScanSchedule"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTDR scan schedule successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/OtdrScanScheduleOverview"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "OTDR Scan schedule could not be updated. Please refer to the API specifications."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "OTDR Scan schedule could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete an OTDR schedule",
                "description": "Delete an OTDR schedule",
                "operationId": "deleteNetworkExternalLinkOtdrScanSchedule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The network external link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "The OTDR schedule ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cascade",
                        "in": "query",
                        "description": "Indicates whether to delete the associated scans",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "baseline",
                        "in": "query",
                        "description": "Indicates whether to delete the baseline scans",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "The operation was successful"
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR schedule"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-external-links/{externalLinkId}/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Link Overview",
                "description": "Get Network External Link by ID. Returns the standard attributes of the Network External Link entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network External Link objects should be done via the standard /network-external-link and /network-external-link/{externalLinkId} endpoints ",
                "operationId": "getNetworkExternalLinkOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalLinkId",
                        "in": "path",
                        "description": "The External Link ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups": {
            "get": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Get all network groups",
                "description": "Get network groups",
                "operationId": "getNetworkGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Add a network group",
                "description": "Add a network group",
                "operationId": "addNetworkGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkGroup",
                        "description": "network group object to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    "201": {
                        "description": "Network Group is successfully added",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    "400": {
                        "description": "Network group could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Constraint violation"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}": {
            "get": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Returns a single network group",
                "description": "Get a  network group specified by id",
                "operationId": "getNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The network group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieve a network group specified by id",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the network group with given id"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Update an existing network group",
                "description": "Updates an existing network group",
                "operationId": "updateNetworkGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The network group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkGroup",
                        "description": "The existing network group to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network group could not be saved. Please verify the request with API specification"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the network group specified"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Delete the specified network group",
                "description": "Delete the specified network group",
                "operationId": "deleteNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The network group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "network group successfully deleted"
                    },
                    "400": {
                        "description": "network group could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find network group"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-connections": {
            "post": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Add a list of network connections to a network group",
                "description": "Add a list of network connections to a network group",
                "operationId": "addNetworkConnectionsToNetworkGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "connectionList",
                        "description": "a list of network connection IDs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Network Connections successfully added to the Network Group"
                    },
                    "400": {
                        "description": "Network Connections failed to be added to the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Remove a list of network connections from a network group",
                "description": "Delete a list of network connections from a network group",
                "operationId": "removeNetworkConnectionsFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "connectionList",
                        "description": "a list of network connection IDs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Connections successfully removed from the Network Group"
                    },
                    "400": {
                        "description": "Network Connections failed to be removed from the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-connections/overview": {
            "get": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Get the list of network connections assigned to the network group",
                "description": "Get the list of network connections assigned to the network group",
                "operationId": "getNetworkConnectionsOverviewFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-elements": {
            "post": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Add a list of network elements to a network group",
                "description": "Add a list of network elements to a network group",
                "operationId": "addNetworkElementsToNetworkGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "neList",
                        "description": "a list of network element IDs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Network Elements successfully added to the Network Group"
                    },
                    "400": {
                        "description": "Network Elements failed to be added to the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Remove a list of network elements from a network group",
                "description": "Delete a list of network elements from a network group",
                "operationId": "removeNetworkElementsFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "neList",
                        "description": "a list of network element IDs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Elements successfully removed from the Network Group"
                    },
                    "400": {
                        "description": "Network Elements failed to be removed from the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-elements/overview": {
            "get": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Get all network elements overview assigned to a given network group",
                "description": "Get all network elements assigned to a given network group",
                "operationId": "getNetworkElementsOverviewFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-external-links": {
            "post": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Add a list of external links to a network group",
                "description": "Add a list of external links to a network group",
                "operationId": "addExternalLinksToNetworkGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "linkIdList",
                        "description": "List of External Links IDs to add to the group",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "External Links successfully added to the Network Group"
                    },
                    "400": {
                        "description": "External Links failed to be added to the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Remove a list of external links from a network group",
                "description": "Delete a list of external links from a network group",
                "operationId": "removeExternalLinksFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "linkIdList",
                        "description": "List of External Links IDs to remove from the group",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "External Links successfully removed from the Network Group"
                    },
                    "400": {
                        "description": "External Links failed to be removed from the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-external-links/overview": {
            "get": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Get the list of external links assigned to the network group",
                "description": "Get the list of external links assigned to the network group",
                "operationId": "getExternalLinksOverviewFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-lightpaths": {
            "post": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Add a list of network lightpaths to a network group",
                "description": "Add a list of network lightpaths to a network group",
                "operationId": "addNetworkLightpathsToNetworkGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "lightpathList",
                        "description": "List of Network Lightpath IDs to add to the group",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Network Lightpaths successfully added to the Network Group"
                    },
                    "400": {
                        "description": "Network Lightpaths failed to be added to the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Remove a list of network lightpaths from a network group",
                "description": "Delete a list of network lightpaths from a network group",
                "operationId": "removeNetworkLightpathsFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "lightpathList",
                        "description": "List of Network Lightpat IDs to remove from the group",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Ligthpath successfully removed from the Network Group"
                    },
                    "400": {
                        "description": "Network Ligthpath failed to be removed from the Network Group"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Group could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-groups/{networkGroupId}/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "NetworkGroup"
                ],
                "summary": "Get the list of network lightpaths assigned to the network group",
                "description": "Get the list of network lightpaths assigned to the network group",
                "operationId": "getNetworkLightpathsOverviewFromNetworkGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkGroupId",
                        "in": "path",
                        "description": "The Network Group ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths",
                "description": "Get Network Lightpaths",
                "operationId": "getNetworkLightpaths",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Lightpath",
                "description": "Save Network Lightpaths",
                "operationId": "addNetworkLightpath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkLightpath",
                        "description": "The Network Lightpath.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "201": {
                        "description": "Network Lightpath successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Network Lightpath could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths Overview",
                "description": "Get Network Lightpaths Overview.  Returns the standard attributes of the Network Lightpath entities in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Lightpath objects should be done via the standard /network-lightpaths and /network-lightpaths/{lightpathId} endpoints ",
                "operationId": "getNetworkLightpathsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpath",
                "description": "Get Network Lightpath",
                "operationId": "getNetworkLightpath",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Lightpath",
                "description": "Updates an existing Network Lightpath",
                "operationId": "updateLightpath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkLightpath",
                        "description": "The updated Network Lightpath.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Network lightpath successfully updated",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network lightpath could not be updated"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network lightpath not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Lightpath",
                "description": "Delete the Network Lightpath",
                "operationId": "deleteNetworkLightpath",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Lightpath successfully deleted"
                    },
                    "400": {
                        "description": "Network Lightpath could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/affecting/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals directly applied or indirectly affecting on the network lightpath",
                "description": "Get all maintenance intervals directly applied or indirectly affecting on a given network lightpath",
                "operationId": "getMaintenanceIntervalsAffectingNetworkLightpath",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The network lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all alarm status records for a given network lightpath",
                "description": "Get all alarm status records for a given network lightpath",
                "operationId": "getNetworkLightpathAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all alarm status overview records for a given network lightpath",
                "description": "Get Network Lightpath Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Lightpath objects should be done via the standard /network-lightpaths and /network-lightpaths/{lightpathId} endpoints ",
                "operationId": "getNetworkLightpathAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network lightpath not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network lightpath",
                "description": "Get alarm status summary for a given network lightpath",
                "operationId": "getNetworkLightpathAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals applied on the network lightpath",
                "description": "Get all maintenance intervals on a given network lightpath",
                "operationId": "getNetworkLightpathMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The network lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-connections": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections by Network Lightpath ID",
                "description": "Get Network Connections by Network Lightpath ID",
                "operationId": "getNetworkConnectionsByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-connections/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections Overview by Network Lightpath ID",
                "description": "Get Network Connections Overview by Lightpath Id.  Returns the standard attributes of the Network Connection entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Connection objects should be done via the standard /network-connection and /network-connections/{connectionId} endpoints ",
                "operationId": "getNetworkConnectionsOverviewByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-elements": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Elements by Network Lightpath ID",
                "description": "Get Network Elements by Network Lightpath ID",
                "operationId": "getNetworkElementsByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-external-links": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links by Network Lightpath ID",
                "description": "Get Network External Links by Network Lightpath ID",
                "operationId": "getNetworkExternalLinksByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create or update the list of Network Ports associated to the Network Lightpath.",
                "description": "Create or update the list of Network External Links associated to the Network Lightpath.  Any previous Network External Link object list will be overwritten. ",
                "operationId": "setNetworkExternalLinksForNetworkLightpath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The unique Network Lightpath identifier of the Lightpath to be modified.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "externalLinkIdList",
                        "description": "The External Link ID List",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Network External Links objects successfully associated to the Network Lightpath."
                    },
                    "400": {
                        "description": "Network External Link object list could not be saved."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-external-links/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network External Links Overview by Network Lightpath ID",
                "description": "Get Network External Links Overview by Lightpath Id.  Returns the standard attributes of the Network External Link entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network External Link objects should be done via the standard /network-external-links and /network-external-links/{externalLinkId} endpoints ",
                "operationId": "getNetworkExternalLinksOverviewByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-groups": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Add a network lightpath to a list of network groups",
                "description": "Add a network lightpath to a list of network groups",
                "operationId": "addNetworkLightpathToNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "groupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Network Lightpath successfully updated with Network Groups."
                    },
                    "400": {
                        "description": "Network Lightpath failed to be updated with Network Groups."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Lightpath could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Replace a Network Lightpath's assigned groups with the ones in the provided list",
                "description": "Replace a Network Lightpath's assigned groups with the ones in the provided list",
                "operationId": "updateNetworkLightpathWithNetworkGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "groupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Network Lightpath successfully added to Network Groups."
                    },
                    "400": {
                        "description": "Network Lightpath failed to be added to Network Groups."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Lightpath could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a network lightpath from a list of network groups",
                "description": "Delete a network lightpath from a list of network groups",
                "operationId": "removeNetworkLightpathFromNetworkGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "groupList",
                        "description": "The list of network groups",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Lightpath successfully removed from Network Groups."
                    },
                    "400": {
                        "description": "Network Lightpath failed to be removed from Network Groups."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Lightpath could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-ports": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports by Network Lightpath ID",
                "description": "Get Network Ports by Network Lightpath ID",
                "operationId": "getNetworkPortsByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/network-ports/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports Overview by Network Lightpath ID",
                "description": "Get Network Ports Overview by Lightpath Id.  Returns the standard attributes of the Network Port entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Port objects should be done via the standard /network-port and /network-port/{portId} endpoints ",
                "operationId": "getNetworkPortsOverviewByNetworkLightpathId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-lightpaths/{lightpathId}/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpath Overview",
                "description": "Get Network Lightpath Overview.  Returns the standard attributes of the Network Lightpath entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Lightpath objects should be done via the standard /network-lightpaths and /network-lightpaths/{lightpathId} endpoints ",
                "operationId": "getNetworkLightpathOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "lightpathId",
                        "in": "path",
                        "description": "The Network Lightpath ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers": {
            "get": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Get Network Manager Configurations",
                "description": "Get Network Manager Configurations",
                "operationId": "getNetworkManagers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Save Network Manager Configurations",
                "description": "Save Network Manager Configurations",
                "operationId": "addNetworkManager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkManager",
                        "description": "Network Manager Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    "201": {
                        "description": "NetworkManager Config successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    "400": {
                        "description": "NetworkManager Config could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/test": {
            "post": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Test Network Manager Configuration",
                "description": "Test Network Manager Configuration",
                "operationId": "testNetworkManager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkManager",
                        "description": "The Network Manager Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "NetworkManager Config test successfully"
                    },
                    "400": {
                        "description": "NetworkManager Config test failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}": {
            "get": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Get Network Manager",
                "description": "Get Network Manager",
                "operationId": "getNetworkManager",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network manager not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Update the Network Manager Configuration",
                "description": "Update the Network Manager Configuration",
                "operationId": "updateNetworkManager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkManager",
                        "description": "Network Manager Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Delete the Network Manager Configuration",
                "description": "Delete the Network Manager Configuration",
                "operationId": "deleteNetworkManager",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "NetworkManager Config successfully deleted"
                    },
                    "400": {
                        "description": "NetworkManager Config could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Get all Alarm Status records for a given Network Manager,",
                "description": "Get all Alarm Status records for a given Network Manager",
                "operationId": "getNetworkManagerAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Get all Alarm Status Overview records for a given Network Manager,",
                "description": "Get Network Manager Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition     to operational attributes and attributes from related objects. ",
                "operationId": "getNetworkManagerAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Get alarm status summary for a given network manager",
                "description": "Get alarm status summary for a given network manager",
                "operationId": "getNetworkManagerAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/forecasted-kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Query the database for forecasted KPIs related to a specific Network Manager Object",
                "description": "Queries the database for forecasted KPIs related to a specific  Network Manager Object ",
                "operationId": "getForecastedKpisByNetworkManagerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Query the database for KPIs related to a specific Network Manager Object",
                "description": "Queries the database for KPIs related to a specific Network Manager Object",
                "operationId": "getKpisByNetworkManagerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/kpis/{measurement}/histogram": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Generate histogram data for KPIs related to a specific Network Manager Object",
                "description": "Generates a list of bins which represent a histogram of the KPIs that match the supplied parameters See /network-ports/{portId}/kpis/{measurement}/histogram for more details ",
                "operationId": "getKpiHistogramByNetworkManagerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "binCount",
                        "in": "query",
                        "description": "Set the number of histogram bins to generate. This overrides the default bin count selection algorithm.",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiHistogramPaginationList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified Network Manager or measurement could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/kpis/{measurement}/summary": {
            "get": {
                "tags": [
                    "Network",
                    "NetworkManager"
                ],
                "summary": "Summarize the KPIs related to a specific Network Manager Object",
                "description": "Summarize the KPIs related to a specific Network Manager Object.  See         /network-ports/{portId}/kpis/{measurement}/summary for more details ",
                "operationId": "getKpiSummaryByNetworkManagerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiSummary"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/network-element-filter-rules": {
            "get": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Get Network Element filter Rule list for NMS data source",
                "description": "Get Network Element filter Rule list for NMS data source",
                "operationId": "getNetworkElementFilterRulesByNetworkManagerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementFilterRule"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Element Filter Rule could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/network-elements": {
            "get": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Get Network Elements in a specific Network Manager",
                "description": "Get Network Elements in a specific Network Manager",
                "operationId": "getNetworkElementsByNetworkManagerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network manager could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-managers/{networkManagerId}/sync": {
            "post": {
                "tags": [
                    "NetworkManager"
                ],
                "summary": "Sync Network Manager",
                "description": "Sync network manager",
                "operationId": "syncNetworkManager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "networkManagerId",
                        "in": "path",
                        "description": "The Network Manager ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkManager",
                        "description": "The Network Manager Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkManager"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "NetworkManager sync request sent successfully."
                    },
                    "400": {
                        "description": "NetworkManager sync request failed to sent."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports",
                "description": "Get Network Ports",
                "operationId": "getNetworkPorts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Save Network Port",
                "description": "Save Network Port",
                "operationId": "addNetworkPort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "networkPort",
                        "description": "The Network Port",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "201": {
                        "description": "Network Port successfully saved",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "400": {
                        "description": "Network Port could not be saved. Please refer to the API specifications"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Alarm configuration could not be found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/apply-alarm-profile/{alarmProfileId}/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Apply a profile configuration to a group of ports",
                "description": "Apply a profile configuration to a group of ports",
                "operationId": "networkPortApplyAlarmProfileBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "alarmProfileId",
                        "in": "path",
                        "description": "Alarm Profile ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "portIds",
                        "description": "List of portIds to apply the profile to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully applied to Network Ports"
                    },
                    "400": {
                        "description": "Alarm Profile could not be applied to Network Ports"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/clear-alarm-profile/bulk": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Clear the TCA profile for a group of ports",
                "description": "Clear the TCA profile for a group of ports",
                "operationId": "networkPortClearAlarmProfileBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "portIds",
                        "description": "List of portIds to apply the profile to",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Alarm Profile successfully cleared for Network Ports"
                    },
                    "400": {
                        "description": "Alarm Profile could not be cleared for Network Ports"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Ports Overview",
                "description": "Get Network Ports Overview",
                "operationId": "getNetworkPortsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Port",
                "description": "Get Network Port",
                "operationId": "getNetworkPort",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Network"
                ],
                "summary": "Update an existing Network Port",
                "description": "Updates an existing Network Port",
                "operationId": "updatePort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "networkPort",
                        "description": "The updated network port.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Network port successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Network Port could not be saved. Please refer to the API specifications."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Port could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete the Network Port",
                "description": "Delete the Network Port",
                "operationId": "deleteNetworkPort",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Network Port successfully deleted"
                    },
                    "400": {
                        "description": "Network Port could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Network Port is in-use and cannot be deleted"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/affecting/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals directly applied or indirectly affecting this network port",
                "description": "Get all maintenance intervals directly applied or indirectly affecting this network ports",
                "operationId": "getMaintenanceIntervalsAffectingNetworkPort",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/alarm-statuses": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status records for a given Network Port",
                "description": "Get all Alarm Status records for a given Network Port",
                "operationId": "getNetworkPortAlarmStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/alarm-statuses/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all Alarm Status Overview records for a given Network Port",
                "description": "Get Network Port Alarm Status Overview.  Returns the standard attributes of the Alarm Status entity in addition to operational attributes and attributes from related objects.  The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients.  All modifications to the Network Port objects should be done via the standard /network-ports and /network-ports/{elementId} endpoints ",
                "operationId": "getNetworkPortAlarmStatusesOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/AlarmStatusOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/alarm-statuses/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get alarm status summary for a given network port",
                "description": "Get alarm status summary for a given network port",
                "operationId": "getNetworkPortAlarmStatusSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm Status Summary returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AlarmStatusSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/forecasted-kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Query the database for forecasted KPIs related to a specific Network Port Object",
                "description": "Queries the database for forecasted KPIs related to a specific Network Port Object ",
                "operationId": "getForecastedKpisByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/kpis/{measurement}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Query the database for KPIs related to a specific Network Port Object",
                "description": "Queries the database for KPIs related to a specific Network Port Object",
                "operationId": "getKpisByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/Kpi"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/kpis/{measurement}/fft": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Perform a Fast Fourier Transform (FFT) for KPIs related to a specific Network Port Object",
                "description": "This API computes the FFT over a series of data points and produces a list of amplitude and phase values for the set of frequencies represented by the data.  The resolution of the frequencies computed depends directly on the length of the data series and the sampling rate of the data.  For example, for a data series of 1024 data points with a sampling rate of 60 seconds, the list of frequencies returned will be from 1/(1024 x 60) Hz to 1/120 Hz in 1/(1024 x 60) Hz increments.  Expressed as periods, those frequency values correspond to event periods ranging from approximately 17 hours to 120 seconds  The FFT algorithm requires that the length of the input data series be a multiple of a power of 2.  To meet this requirement this API will pad the data with zeroes if the length is not an exact multiple of a power of 2.  To minimize the loss of accuracy due to padding a user should adjust the time attribute searchParams to minimize the amount of padding required.  Alternatively, if padding is not desired it can be disabled with the Padding query parameter.  Setting \"padding=false\" on the API query will cause the data series to be truncated down to the previous power of 2 rather than padding up to the next power of 2  To minimize the amount of API response data, entries with a zero value amplitude will be excluded from the response data  The Sort query parameter can be used to order the data by \"frequency\", \"amplitude\", or \"phase\"  The SearchParams query parameter can be used to scope the FFT computation to a time window by specifying a start and end timestamp  The data series must be uniformly and contiguously spaced.  That is, all data points must be evenly spaced (e.g., every 60 seconds) and there must not be any missing data points.  If there are missing data points an error will be returned.  This behaviour can be overridden by using the TimeGrouping query parameter to specify a sampling frequency -- specified in seconds.  This argument will be used to interpolate the data at the specified sampling rate.  The synthesized data will be constructed from the mean value of data points within each TimeGrouping period.  Missing data points will be populated from previous/adjacent data points.  When the TimeGrouping parameter is used it is strongly recommended to scope the data series by specifying both a start and end timestamp in the SearchParams parameter  Pagination is supported on this API endpoint but because of the nature of the FFT computation an internal cache is used to buffer the full result data until it is requested by the API user.  As each page is requested the internal cache is consulted instead of re-calculating the FFT -- if the cache is populated it is used; otherwise the FFT is re-calculated.   Querying the first page (0) always results in a new FFT calculation based on a fresh query of the underlying timeseries data.  The cache is only valid for 60 seconds therefore if a non-zero page is queried after this timeout the FFT is re-calculated using up-to-date data ",
                "operationId": "getKpiFourierTransformByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "padding",
                        "in": "query",
                        "description": "Enable or disable zero padding of time series during FFT computation",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiFourier"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/kpis/{measurement}/histogram": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Generate histogram data for KPIs related to a specific Network Port Object",
                "description": "Generates a list of bins which represent a histogram of the KPIs that match the supplied parameters Each bin includes its minimum (inclusive) and maximum (exclusive, except the final bin which is inclusive) bounds for the KPI values represented in its interval, as well as the count of data points that fell into that interval. Bin sizes are uniform and chosen using the Freedman–Diaconis rule. These bins can be used to render a histogram of the KPI data ",
                "operationId": "getKpiHistogramByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "binCount",
                        "in": "query",
                        "description": "Set the number of histogram bins to generate. This overrides the default bin count selection algorithm.",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "desc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiHistogramPaginationList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The specified port or measurement could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/kpis/{measurement}/summary": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Summarize the KPIs related to a specific Network Port Object",
                "description": "Summarize the KPIs related to a specific Network Port Object.  The SearchParams parameter can be used to scope the query to a specific time range or to a range of values.  The TimeGrouping parameter can be used to partition the results by time period -- specified in seconds.  The response object returns a list of KPI summary objects each representing a group of results according to the TimeGrouping parameter or a list containing only a single KPI summary object if the TimeGrouping parameter was not specified The \"count\" attribute represents the number of data points matched by the query.  If no records were found then the \"count\" attribute will be 0 and all other attributes will be set to \"null\" (i.e., minimum, maximum, mean, etc).  The \"stddev\" and \"median\" attributes will only be non-null if 2 or more records were found.  Similarly, the quartile attributes will only be non-null if 4 or more records were found ",
                "operationId": "getKpiSummaryByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "measurement",
                        "in": "path",
                        "description": "The measurement to be queried",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results. The format is \"field1 OP value1 && field2 OP value2\" OR \"field1 OP value1 || field2 OP value2\" where OP could be: =, !=, :, !:, >, <\"",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "timeGrouping",
                        "in": "query",
                        "description": "Results will be grouped by time interval corresponding to the number of seconds specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/KpiSummary"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/maintenance-intervals": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all maintenance intervals applied on the network ports",
                "description": "Get all maintenance intervals on a given network ports",
                "operationId": "getNetworkPortMaintenanceIntervals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceInterval"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/network-connections": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections by Network Port ID",
                "description": "Get Network Connections by Network Port ID",
                "operationId": "getNetworkConnectionsByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/network-connections/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Connections Overview by Network Port ID",
                "description": "Get Network Connections Overview by Network Port Id. Returns the standard attributes of the Network Connections entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Connection objects should be done via the standard /network-ports and /network-ports/{portId} endpoints ",
                "operationId": "getNetworkConnectionsOverviewByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/network-lightpaths": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths by Network Port ID",
                "description": "Get Network Lightpaths by Network Port ID",
                "operationId": "getNetworkLightpathsByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/network-lightpaths/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Lightpaths Overview by Network Port ID",
                "description": "Get Network Lightpaths Overview by Network Port Id. Returns the standard attributes of the Network Lightpath entity in addition to operational attributes and attributes from related objects. The purpose of this endpoint is to consolidate information from multiple API endpoints into a single endpoint to optimize the number of API accesses required by clients. All modifications to the Network Lightpath objects should be done via the standard /network-lightpaths and /network-lightpaths/{portId} endpoints ",
                "operationId": "getNetworkLightpathsOverviewByNetworkPortId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Network Port object could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-ports/{portId}/overview": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network Port Overview",
                "description": "Get Network Port Overview",
                "operationId": "getNetworkPortOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "portId",
                        "in": "path",
                        "description": "The Network Port ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/esnr-coefficients": {
            "get": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Get ESNR calculation coefficients reference data",
                "description": "Get ESNR calculation coefficients reference data",
                "operationId": "getAllReferenceEsnrCoefficients",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceEsnrCoefficients"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/esnr-coefficients/bulk": {
            "put": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Update multiple ESNR calculation coefficients entries",
                "description": "Update multiple ESNR calculation coefficients entries",
                "operationId": "updateReferenceEsnrCoefficientsEntriesBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "esnrCoefficients",
                        "description": "List of ESNR calculation coefficients reference objects to update",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkReferenceEsnrCoefficients"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "The operation was successful"
                    },
                    "400": {
                        "description": "ESNR calculation coefficients entries could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find ESNR calculation coefficients entries"
                    },
                    "409": {
                        "description": "ESNR Coefficients entry attributes could not be updated",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/esnr-coefficients/{esnrCoefficientsId}": {
            "get": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Get an ESNR calculation coefficients entry",
                "description": "Get a specific ESNR calculation coefficients entry",
                "operationId": "getReferenceEsnrCoefficientsEntry",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "esnrCoefficientsId",
                        "in": "path",
                        "description": "The ESNR calculation coefficients entry ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceEsnrCoefficients"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find ESNR calculation coefficients entry"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Update an ESNR calculation coefficients entry",
                "description": "Update an ESNR calculation coefficients entry",
                "operationId": "updateReferenceEsnrCoefficientsEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "esnrCoefficientsId",
                        "in": "path",
                        "description": "The ESNR calculation coefficients entry ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "esnrCoefficients",
                        "description": "ESNR calculation coefficients reference object to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceEsnrCoefficients"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceEsnrCoefficients"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "ESNR calculation coefficients entry could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find ESNR calculation coefficients entry"
                    },
                    "409": {
                        "description": "ESNR Coefficients entry attributes could not be updated",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/fec-limits": {
            "get": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Get FEC limit reference data",
                "description": "Get FEC limit reference data",
                "operationId": "getAllReferenceFecLimit",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFecLimit"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/fec-limits/bulk": {
            "put": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Update multiple FEC limit entries",
                "description": "Update multiple FEC limit entries",
                "operationId": "updateReferenceFecLimitEntriesBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "fecLimits",
                        "description": "List of FEC Limit Reference objects to update",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkReferenceFecLimit"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "The operation was successful"
                    },
                    "400": {
                        "description": "FEC limit entries could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find FEC limit entries"
                    },
                    "409": {
                        "description": "FEC limit entry attributes could not be updated",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/fec-limits/{fecLimitId}": {
            "get": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Get a FEC limit entry",
                "description": "Get a specific FEC limit entry",
                "operationId": "getReferenceFecLimitEntry",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fecLimitId",
                        "in": "path",
                        "description": "The FEC Limit entry ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFecLimit"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find FEC limit entry"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Update a FEC limit entry",
                "description": "Update a FEC limit entry",
                "operationId": "updateReferenceFecLimitEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fecLimitId",
                        "in": "path",
                        "description": "The FEC Limit entry ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "fecLimit",
                        "description": "FEC Limit Reference object to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFecLimit"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFecLimit"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "FEC limit entry could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find FEC limit entry"
                    },
                    "409": {
                        "description": "FEC limit entry attributes could not be updated",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/fiber-types": {
            "get": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Get Fiber Type reference data",
                "description": "Get Fiber Type reference data",
                "operationId": "getAllReferenceFiberType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFiberType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/fiber-types/bulk": {
            "put": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Update multiple Fiber Type entries",
                "description": "Update multiple Fiber Type entries",
                "operationId": "updateReferenceFiberTypeEntriesBulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "fiberTypes",
                        "description": "List of Fiber TypeFEC Limit Reference objects to update",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkReferenceFiberType"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "The operation was successful"
                    },
                    "400": {
                        "description": "Fiber Type entries could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find Fiber Type entries"
                    },
                    "409": {
                        "description": "Fiber Type entry attributes could not be updated",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/network-references/fiber-types/{fiberTypeId}": {
            "get": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Get a Fiber Type entry",
                "description": "Get a specific Fiber Type entry",
                "operationId": "getReferenceFiberTypeEntry",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fiberTypeId",
                        "in": "path",
                        "description": "The Fiber Type entry ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFiberType"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find Fiber Type entry"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "NetworkReferences"
                ],
                "summary": "Update a Fiber Type entry",
                "description": "Update a Fiber Type entry",
                "operationId": "updateReferenceFiberTypeEntry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fiberTypeId",
                        "in": "path",
                        "description": "The Fiber Type entry ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "fiberType",
                        "description": "Fiber Type Reference object to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFiberType"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/NetworkReferenceFiberType"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Fiber Type entry could not be saved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find Fiber Type entry"
                    },
                    "409": {
                        "description": "Fiber Type entry attributes could not be updated",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/otdr-definitions": {
            "get": {
                "tags": [
                    "OtdrDefinition"
                ],
                "summary": "Get all available OTDR definitions",
                "description": "Get all OTDR definitions",
                "operationId": "getOtdrDefinitions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "OtdrDefinition"
                ],
                "summary": "Create a new OTDR Definition",
                "description": "Create a new OTDR Definition",
                "operationId": "addOtdrDefinition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "otdrDefinition",
                        "description": "The OTDR Definition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    "201": {
                        "description": "OTDR definition successfully saved",
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/otdr-definitions/{definitionId}": {
            "get": {
                "tags": [
                    "OtdrDefinition"
                ],
                "summary": "Get a specific OTDR definition",
                "description": "Get a specific OTDR definition",
                "operationId": "getOtdrDefinition",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "The OTDR Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR definition"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "OtdrDefinition"
                ],
                "summary": "Update the OTDR Definition",
                "description": "Update the OTDR Definition",
                "operationId": "updateOtdrDefinition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "The OTDR Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "otdrDefinition",
                        "description": "The OTDR Definition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/OtdrDefinition"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR definition"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OtdrDefinition"
                ],
                "summary": "Delete an OTDR definition",
                "description": "Delete an OTDR definition",
                "operationId": "deleteOtdrDefinition",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "The OTDR Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "The operation was successful"
                    },
                    "400": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the OTDR definition"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the list of all Report Definitions in the system",
                "description": "Retrieve the list of all Report Definitions in the system",
                "operationId": "getReportDefinitions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definitions successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Create a new Report Definition",
                "description": "Create a new Report Definition",
                "operationId": "addReportDefinition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "reportDefinition",
                        "description": "Report Definition Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    "201": {
                        "description": "Report Definition successfully created.",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/retention": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the reporting retention policies",
                "description": "Retrieve the reporting retention policies",
                "operationId": "getReportRetention",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the report retention policies.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportRetention"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Update the reporting retention policies",
                "description": "Update the reporting retention policies",
                "operationId": "updateReportRetention",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "retentionPolicies",
                        "description": "Report retention policies object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportRetention"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the report retention policies.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportRetention"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Report retention policies could not be updated."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/schedule": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the schedule of report generation tasks",
                "description": "Retrieve the schedule of report generation tasks",
                "operationId": "getReportSchedule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of report generation tasks.",
                        "schema": {
                            "$ref": "#/definitions/ScheduledReport"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Create a new scheduled report generation task",
                "description": "Create a new scheduled report generation task",
                "operationId": "createReportTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "scheduledReport",
                        "description": "Scheduled Report Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduledReport"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduledReport"
                        }
                    },
                    "201": {
                        "description": "Successfully created new report schedule entry.",
                        "schema": {
                            "$ref": "#/definitions/ScheduledReport"
                        }
                    },
                    "400": {
                        "description": "Could not create new report schedule entry."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/schedule/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the report schedule overview",
                "description": "Retrieve the report schedule overview",
                "operationId": "getReportScheduleOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of overview schedule entries.",
                        "schema": {
                            "$ref": "#/definitions/ScheduledReportOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/schedule/{taskId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve a single report generation task",
                "description": "Retrieve a single report generation task",
                "operationId": "getReportTask",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Scheduled Report ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the report generation task.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportTypeDetails"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Schedule entry could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Update a report generation task",
                "description": "Update a report generation task",
                "operationId": "updateReportTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Scheduled Report ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "scheduledReport",
                        "description": "Scheduled Report Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduledReport"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the report generation task.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportTypeDetails"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Schedule entry could not be updated."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Schedule entry could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete a report generation task",
                "description": "Delete a report generation task",
                "operationId": "deleteReportTask",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Scheduled Report ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Successfully deleted the report generation task."
                    },
                    "400": {
                        "description": "Schedule entry could not be deleted."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Schedule entry could not be found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/types": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the list of all supported report types",
                "description": "Retrieve the list of all supported report types",
                "operationId": "getReportTypes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of report types.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportTypeDetails"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve a single Report Definition",
                "description": "Retrieve a single Report Definition",
                "operationId": "getReportDefinition",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Update a single Report Definition",
                "description": "Update a single Report Definition",
                "operationId": "updateReportDefinition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "reportDefinition",
                        "description": "Report Definition Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/ReportDefinition"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Report Definition could not be updated."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete a single Report Definition",
                "description": "Delete a single Report Definition",
                "operationId": "deleteReportDefinition",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Report Definition successfully deleted."
                    },
                    "400": {
                        "description": "Report Definition could not be deleted."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/runs": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the list of all Report runs for a given Report Definition",
                "description": "Retrieve the list of all Report runs for a given Report Definition",
                "operationId": "getReportDefinitionRuns",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report runs successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ReportRun"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/runs/{runId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve a single Report run for a given Report Definition",
                "description": "Retrieve a single Report run for a given Report Definition",
                "operationId": "getReportDefinitionRun",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Report run ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report run successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ReportRun"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition or Report run not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete a single Report run for a given Report Definition",
                "description": "Delete a single Report run for a given Report Definition",
                "operationId": "deleteReportDefinitionRun",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Report run ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Report run successfully deleted."
                    },
                    "400": {
                        "description": "Report run could not be deleted."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition or Report run not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/runs/{runId}/cancel": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Cancel the execution of the specified Report Run if it is in-progress",
                "description": "Cancel the execution of the specified Report Run if it is in-progress",
                "operationId": "cancelReportRunExecution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Report run ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Report run successfully cancelled"
                    },
                    "400": {
                        "description": "Report run could not be cancelled"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition or Report run not found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/runs/{runId}/csv": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the CSV Report for a run of a given Report Definition",
                "description": "Retrieve the CSV Report for a run of a given Report Definition",
                "operationId": "getReportDefinitionRunCsv",
                "produces": [
                    "text/csv"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Report run ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report run successfully retrieved.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Report is still being generated, file is not ready for download."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition or Report run not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/runs/{runId}/pdf": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the PDF Report for a run of a given Report Definition",
                "description": "Retrieve the PDF Report for a run of a given Report Definition",
                "operationId": "getReportDefinitionRunPdf",
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Report run ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report run successfully retrieved.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "400": {
                        "description": "Report is still being generated, file is not ready for download."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition or Report run not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-cards": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target cards from the specified report definition",
                "description": "Retrieve the target cards from the specified report definition",
                "operationId": "getReportDefinitionTargetCards",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target cards successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkCard"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-cards/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target cards overview from the specified report definition",
                "description": "Retrieve the target cards overview from the specified report definition",
                "operationId": "getReportDefinitionTargetCardsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target cards overview successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkCardOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-connections": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target connections from the specified report definition",
                "description": "Retrieve the target connections from the specified report definition",
                "operationId": "getReportDefinitionTargetConnections",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target connections successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-connections/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target connections overview from the specified report definition",
                "description": "Retrieve the target connections overview from the specified report definition",
                "operationId": "getReportDefinitionTargetConnectionsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target connections overview successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkConnectionOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-elements": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target elements from the specified report definition",
                "description": "Retrieve the target elements from the specified report definition",
                "operationId": "getReportDefinitionTargetElements",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target elements successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkElement"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-elements/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target elements overview from the specified report definition",
                "description": "Retrieve the target elements overview from the specified report definition",
                "operationId": "getReportDefinitionTargetElementsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target elements overview successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkElementOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-external-links": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target external links from the specified report definition",
                "description": "Retrieve the target external links from the specified report definition",
                "operationId": "getReportDefinitionTargetExternalLinks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target external links successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLink"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-external-links/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target external links overview from the specified report definition",
                "description": "Retrieve the target external links overview from the specified report definition",
                "operationId": "getReportDefinitionTargetExternalLinksOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target external links overview successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalLinkOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-groups": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target groups from the specified report definition",
                "description": "Retrieve the target groups from the specified report definition",
                "operationId": "getReportDefinitionTargetGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target groups successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroup"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-lightpaths": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target lightpaths from the specified report definition",
                "description": "Retrieve the target lightpaths from the specified report definition",
                "operationId": "getReportDefinitionTargetLightpaths",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target lightpaths successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpath"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-lightpaths/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target lightpaths overview from the specified report definition",
                "description": "Retrieve the target lightpaths overview from the specified report definition",
                "operationId": "getReportDefinitionTargetLightpathsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target lightpaths overview successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkLightpathOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-ports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target ports from the specified report definition",
                "description": "Retrieve the target ports from the specified report definition",
                "operationId": "getReportDefinitionTargetPorts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target ports successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkPort"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/reports/{reportDefinitionId}/target-ports/overview": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve the target ports overview from the specified report definition",
                "description": "Retrieve the target ports overview from the specified report definition",
                "operationId": "getReportDefinitionTargetPortsOverview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportDefinitionId",
                        "in": "path",
                        "description": "Report Definition ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Definition target ports overview successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/NetworkPortOverview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Definition not found."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/server/container-names": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Get server container information",
                "description": "Provides basic container information about the server",
                "operationId": "getContainerNames",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provide system container information",
                        "schema": {
                            "$ref": "#/definitions/ContainerList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/server/info": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Get server information",
                "description": "Provides basic information about the server",
                "operationId": "getInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provide system information",
                        "schema": {
                            "$ref": "#/definitions/ServerInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/server/swagger-docs-status": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Find out if the Swagger Documentation is enabled",
                "description": "Indicates if the Swagger Documentation is enabled",
                "operationId": "getSwaggerDocsStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicate if the swagger documentation is enabled",
                        "schema": {
                            "$ref": "#/definitions/SwaggerDocsStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Settings",
                "description": "Get Settings",
                "operationId": "getSettings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of Settings",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Updates settings",
                "description": "Updates settings",
                "operationId": "updateSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "settings",
                        "description": "The updated settings.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Setting"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Setting"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ModelError"
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/weather-configs": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Get All Weather configurations",
                "description": "Get Weather configs",
                "operationId": "getWeatherConfigs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchParams",
                        "in": "query",
                        "description": "The searchParams query parameter can be used to filter results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of result",
                        "required": false,
                        "type": "integer",
                        "default": 15,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "The sort key word",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The sort direction",
                        "required": false,
                        "type": "string",
                        "default": "asc",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Weather"
                ],
                "summary": "Save Weather config",
                "description": "Save the Weather configuration",
                "operationId": "addWeatherConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "weatherConfig",
                        "description": "The Weather configuration.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    "201": {
                        "description": "Weather config successfully saved",
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    "400": {
                        "description": "Weather config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/v1/weather-configs/{weatherConfigId}": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Returns a single Weather config",
                "description": "Get Weather config",
                "operationId": "getWeatherConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "weatherConfigId",
                        "in": "path",
                        "description": "The Weather Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the Weather config"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Weather"
                ],
                "summary": "Update an existing Weather config",
                "description": "Updates an existing Weather configuration",
                "operationId": "updateWeatherConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "weatherConfigId",
                        "in": "path",
                        "description": "The Weather Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "weatherConfig",
                        "description": "The updated Existing Weather Config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The operation was successful",
                        "schema": {
                            "$ref": "#/definitions/WeatherConfig"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Weather config could not be saved. Please check the API specification for the request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find the Weather config specified"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Weather"
                ],
                "summary": "Delete the Weather config",
                "description": "Delete the Weather configuration",
                "operationId": "deleteWeatherConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "weatherConfigId",
                        "in": "path",
                        "description": "The Weather Configuration ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "Weather config successfully deleted"
                    },
                    "400": {
                        "description": "Weather config could not be deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Failed to find Weather config"
                    },
                    "409": {
                        "description": "Weather config is in use. To delete Weather config please reassign the Network Elements or Network Domain objects"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "AlarmConfig": {
            "type": "object",
            "required": [
                "measurement",
                "type"
            ],
            "properties": {
                "atRiskLowerThreshold": {
                    "type": "number",
                    "format": "float",
                    "description": "The upper threshold at which to assert a \"at-risk\" condition if a value decreases below this threshold ",
                    "allowEmptyValue": false
                },
                "atRiskUpperThreshold": {
                    "type": "number",
                    "format": "float",
                    "description": "The upper threshold at which to assert a \"at-risk\" condition if a value increases above this threshold ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "debounceMargin": {
                    "type": "number",
                    "format": "float",
                    "description": "Instead of clearing an alarm as soon as the value returns below the threshold value this configuration value requires that the metric drop below an additional margin before clearing the condition. If this value is not provided then the condition is cleared as soon as the value returns below the threshold level ",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Enable/Disable the alarm configuration on a per metric basis ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "measurement": {
                    "type": "string",
                    "description": "The KPI metric name to be monitored ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "A user defined name to identify this alarm config object.  The name must be unique ",
                    "allowEmptyValue": false
                },
                "nonCompliantLowerThreshold": {
                    "type": "number",
                    "format": "float",
                    "description": "The lower threshold at which to assert a \"non-compliant\" condition if a value decreases below this threshold ",
                    "allowEmptyValue": false
                },
                "nonCompliantUpperThreshold": {
                    "type": "number",
                    "format": "float",
                    "description": "The upper threshold at which to assert a \"non-compliant\" condition if a value increases above this threshold ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "Alarm threshold type ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "AlarmConfig"
        },
        "AlarmProfile": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "AlarmProfile"
        },
        "AlarmStatus": {
            "type": "object",
            "properties": {
                "alarmConfigId": {
                    "type": "string",
                    "description": "The unique identifier of the alarm config object that triggered this status event.  The alarm config object contains the measurement name and the configured threshold values ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "currentLevel": {
                    "type": "string",
                    "description": "The current alarm status threshold level that has been crossed ",
                    "allowEmptyValue": false
                },
                "details": {
                    "type": "string",
                    "description": "Additional information related to the alarm status change event that is not con ",
                    "allowEmptyValue": false
                },
                "entityId": {
                    "type": "string",
                    "description": "The unique identifier of the object that triggered this status event ",
                    "allowEmptyValue": false
                },
                "entityType": {
                    "type": "string",
                    "description": "The type of object that triggered this status event.  The full details of the object can be acquired by using the `entityId` value as input to the API endpoint related to the type of object indicated by this attribute ",
                    "allowEmptyValue": false
                },
                "eventType": {
                    "type": "string",
                    "description": "Enum value indication of the type of alarm, Eg. UNKNOWN, PLANNED, UNPLANNED or SERVICE_INTERRUPTION ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this alarm status object ",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "End user supplied notes relating to the possible cause of the alarm status event or the reason for suppression/acknowledgment ",
                    "allowEmptyValue": false
                },
                "previousLevel": {
                    "type": "string",
                    "description": "The previous alarm status threshold level ",
                    "allowEmptyValue": false
                },
                "suppressed": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether the alarm status event has been suppressed/acknowledged by an end user ",
                    "allowEmptyValue": false
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time at which the event occurred - represented in nanoseconds since Epoch in the GMT timezone ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "value": {
                    "type": "number",
                    "format": "float",
                    "description": "The value that triggered the alarm status change event ",
                    "allowEmptyValue": false
                }
            },
            "title": "AlarmStatus"
        },
        "AlarmStatusOverview": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "currentLevel": {
                    "type": "string",
                    "description": "The current alarm status threshold level that has been crossed ",
                    "allowEmptyValue": false
                },
                "details": {
                    "type": "string",
                    "description": "Additional information related to the alarm status change event that is not con ",
                    "allowEmptyValue": false
                },
                "entityId": {
                    "type": "string",
                    "description": "The unique identifier of the object that triggered this status event ",
                    "allowEmptyValue": false
                },
                "entityName": {
                    "type": "string",
                    "description": "The name of object that triggered this status event ",
                    "allowEmptyValue": false
                },
                "entityType": {
                    "type": "string",
                    "description": "The type of object that triggered this status event.  The full details of the object can be acquired by using the `entityId` value as input to the API endpoint related to the type of object indicated by this attribute ",
                    "allowEmptyValue": false
                },
                "eventType": {
                    "type": "string",
                    "description": "Enum value indication of the type of alarm, Eg. UNKNOWN, PLANNED, UNPLANNED or SERVICE_INTERRUPTION ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this alarm status object ",
                    "allowEmptyValue": false
                },
                "measurementLabel": {
                    "type": "string",
                    "description": "The measurement user friendly name the current alarm raised on ",
                    "allowEmptyValue": false
                },
                "measurementName": {
                    "type": "string",
                    "description": "The measurement name the current alarm raised on ",
                    "allowEmptyValue": false
                },
                "neName": {
                    "type": "string",
                    "description": "The network element name associated to the network entity ",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "End user supplied notes relating to the possible cause of the alarm status event or the reason for suppression/acknowledgment ",
                    "allowEmptyValue": false
                },
                "previousLevel": {
                    "type": "string",
                    "description": "The previous alarm status threshold level ",
                    "allowEmptyValue": false
                },
                "suppressed": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether the alarm status event has been suppressed/acknowledged by an end user ",
                    "allowEmptyValue": false
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time at which the event occurred - represented in nanoseconds since Epoch in the GMT timezone ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "value": {
                    "type": "number",
                    "format": "float",
                    "description": "The value that triggered the alarm status change event ",
                    "allowEmptyValue": false
                }
            },
            "title": "AlarmStatusOverview"
        },
        "AlarmStatusSummary": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of alarm status records with an alarm status level corresponding to the value in the `level` attribute. ",
                    "allowEmptyValue": false
                },
                "level": {
                    "type": "string",
                    "description": "Represents an alarm status level ",
                    "allowEmptyValue": false
                },
                "measurement": {
                    "type": "string",
                    "description": "The KPI metric name ",
                    "allowEmptyValue": false
                }
            },
            "title": "AlarmStatusSummary"
        },
        "AlarmStatusUpdate": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "suppressed": {
                    "type": "boolean",
                    "example": false,
                    "allowEmptyValue": false
                }
            },
            "title": "AlarmStatusUpdate",
            "description": "This is a partial Alarm Status object containing only the mutable fields "
        },
        "CPUKpi": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string",
                    "description": "Container name ",
                    "allowEmptyValue": false
                },
                "meanUsagePercentage": {
                    "type": "number",
                    "format": "float",
                    "description": "CPU mean usage percentage ",
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Measurement timestamp (in nanoseconds) ",
                    "allowEmptyValue": false
                }
            },
            "title": "CPUKpi"
        },
        "CardTypeAlarmProfileMapping": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "cardType": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "CardTypeAlarmProfileMapping"
        },
        "ContainerList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ContainerList"
        },
        "DiskKpi": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string",
                    "description": "Container name ",
                    "allowEmptyValue": false
                },
                "meanRecursiveRead": {
                    "type": "number",
                    "format": "float",
                    "description": "Disk mean recursive read ",
                    "allowEmptyValue": false
                },
                "meanRecursiveWrite": {
                    "type": "number",
                    "format": "float",
                    "description": "Disk mean recursive write ",
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Measurement timestamp (in nanoseconds) ",
                    "allowEmptyValue": false
                }
            },
            "title": "DiskKpi"
        },
        "File": {
            "type": "object",
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "absoluteFile": {
                    "$ref": "#/definitions/File"
                },
                "absolutePath": {
                    "type": "string"
                },
                "canonicalFile": {
                    "$ref": "#/definitions/File"
                },
                "canonicalPath": {
                    "type": "string"
                },
                "directory": {
                    "type": "boolean"
                },
                "executable": {
                    "type": "boolean"
                },
                "file": {
                    "type": "boolean"
                },
                "freeSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "hidden": {
                    "type": "boolean"
                },
                "lastModified": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parentFile": {
                    "$ref": "#/definitions/File"
                },
                "path": {
                    "type": "string"
                },
                "readable": {
                    "type": "boolean"
                },
                "totalSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "usableSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "writable": {
                    "type": "boolean"
                }
            },
            "title": "File"
        },
        "HdfsConnector": {
            "type": "object",
            "required": [
                "dataSource",
                "flushSize",
                "storeUrl",
                "uploadStrategy"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "dataSource": {
                    "type": "string",
                    "description": "Identifier of the datasource type. Datasource property defines the HDFS upload operation's source system. Target system is HDFS storage ",
                    "allowEmptyValue": false
                },
                "flushSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of records written to store before invoking file commits ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this HdfsConnector object ",
                    "allowEmptyValue": false
                },
                "logsDir": {
                    "type": "string",
                    "description": "Top level directory to store the write-ahead logs (WAL). The WAL stores the new data that hasn't been persisted or committed to the permanent storage It is used in case of failure to recover the data sets ",
                    "allowEmptyValue": false
                },
                "partitionFieldName": {
                    "type": "string",
                    "description": "The partitions to use when writing data to the store. Partitions the data to different directories according to the value of the partitioning field specified Only applied to KPI data source ",
                    "allowEmptyValue": false
                },
                "rotationSchedule": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The time interval in milliseconds to periodically invoke file commits This configuration ensures that file commits are invoked at every configured interval Time of commit will be adjusted to 00:00 of selected timezone The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages This parameter will only be used if upload strategy is scheduled_rotation ",
                    "allowEmptyValue": false
                },
                "storeUrl": {
                    "type": "string",
                    "description": "HDFS store URL information ",
                    "allowEmptyValue": false
                },
                "topicsCaptureGroupsRegex": {
                    "type": "string",
                    "description": "A pattern regex that matches the entire topic and captures values substituting into topicsDir. Indexed capture groups are accessible with ${n}, where ${0} refers to the whole match and ${1} refers to the first capture group ",
                    "allowEmptyValue": false
                },
                "topicsDir": {
                    "type": "string",
                    "description": "Top level directory to store the data ingested from Kafka It supports ${topic} in the value, which will be replaced by the actual topic name. It supports as well ${0}, ..., ${n} in conjunction with topicsCaptureGroupsRegex ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "uploadStrategy": {
                    "type": "string",
                    "description": "The HDFS connector’s upload strategy determines how records read from a Kafka topic are partitioned into HDFS objects ",
                    "allowEmptyValue": false
                }
            },
            "title": "HdfsConnector"
        },
        "HdfsConnectorTest": {
            "type": "object",
            "required": [
                "storeUrl"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this HdfsConnector object ",
                    "allowEmptyValue": false
                },
                "storeUrl": {
                    "type": "string",
                    "description": "HDFS store URL information ",
                    "allowEmptyValue": false
                }
            },
            "title": "HdfsConnectorTest"
        },
        "InputStream": {
            "type": "object",
            "title": "InputStream"
        },
        "Kpi": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "string",
                    "description": "The port number value extracted from the OpenConfig resource name.  For example, if the OpenConfig resource name is \"TRANSCEIVER-1-2-3\" this value will be \"1/2/3\".  This is intended to align with the \"portNumber\" attribute of a Network Port resource.  If the port number value could not be extracted from the OpenConfig resource name or the reporting resource was not a port then this data is not provided ",
                    "allowEmptyValue": false
                },
                "resource": {
                    "type": "string",
                    "description": "The OpenConfig resource name under which the KPI data was reported ",
                    "allowEmptyValue": false
                },
                "target": {
                    "type": "string",
                    "description": "The Network Element unique identifier (UUID) of the network element that reported the data ",
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The Unix Epoch timestamp in nanoseconds -- in the GMT timezone ",
                    "allowEmptyValue": false
                },
                "value": {
                    "type": "number",
                    "description": "The KPI data value reported by the Network Element ",
                    "allowEmptyValue": false
                }
            },
            "title": "Kpi"
        },
        "KpiFourier": {
            "type": "object",
            "properties": {
                "amplitude": {
                    "type": "number",
                    "description": "The amplitude of the interpreted data at the given frequency ",
                    "allowEmptyValue": false
                },
                "frequency": {
                    "type": "number",
                    "description": "The frequency bin of the Fast Fourier Transform operation on the KPI data.  Regardless of the sampling rate of a KPI time series, the frequency is represented as the number of occurrences per year.  For example, for an event occurring once per month the frequency would be listed as 12 ",
                    "allowEmptyValue": false
                },
                "phase": {
                    "type": "number",
                    "description": "The phase of the interpreted data at the given frequency ",
                    "allowEmptyValue": false
                }
            },
            "title": "KpiFourier"
        },
        "KpiHistogramBin": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number",
                    "description": "The number of recorded KPI data points that fall between the minimum and maximum values for this bin ",
                    "allowEmptyValue": false
                },
                "minValue": {
                    "type": "number",
                    "description": "The lower bound of the KPI measurement values include in this bin ",
                    "allowEmptyValue": false
                }
            },
            "title": "KpiHistogramBin"
        },
        "KpiHistogramPaginationList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/KpiHistogramBin"
                    }
                }
            },
            "title": "KpiHistogramPaginationList"
        },
        "KpiMeasurement": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "decimalPrecision": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The expected number of decimal places in the measurement values.  This is not a maximum or minimum number of decimal positions that will be reported in the data, but rather a guideline as to what to expect and a suggestion about what display characteristics could be applied ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "A description of the origin and/or purpose of the measurement ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "expectedLowerBound": {
                    "type": "number",
                    "format": "float",
                    "description": "The expected minimum value of any single measurement value.  This will be omitted if there is no known lower bound ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "expectedUpperBound": {
                    "type": "number",
                    "format": "float",
                    "description": "The expected maximum value of any single measurement value.  This will be omitted if there is no known upper bound ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "groupName": {
                    "type": "string",
                    "description": "Group name ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier reserved for this measurement.  It is currently not intended for use in any other API endpoint.  It is reserved as placeholder for any potential future use ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "label": {
                    "type": "string",
                    "description": "A short text description of the measurement name ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the measurement value.  This value is the key to be used in other API endpoints whenever a port KPI name is required.  For example, as a key into the API endpoint to query KPI values on a per port basis (e.g., /network-ports/{portId}/kpis/{measurement}) or as an attribute within an AlarmConfig object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "resources": {
                    "type": "array",
                    "description": "List of modeled resources to which this measurement can be associated ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string",
                    "description": "The source from which the data related to this measurement is gathered ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type of measurement ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "unit": {
                    "type": "string",
                    "description": "The short version of the unit represented by the measurement value.  For example, 'dB' for values representing decibel values ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "unitDescription": {
                    "type": "string",
                    "description": "The longer version of the unit represented by the measurement value.  For example, 'Decibel Milliwatts' for values representing decibels in milliwatts ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "KpiMeasurement"
        },
        "KpiMetricsSummary": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number",
                    "format": "double",
                    "description": "The number of unique resources (i.e., card, port, etc...) reporting data for the selected measurement Set to 0 if no resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "maximum": {
                    "type": "number",
                    "format": "double",
                    "description": "The maximum value reported by any resource for the selected measurement, or null if no resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "mean": {
                    "type": "number",
                    "format": "double",
                    "description": "The mean value reported by any resource for the selected measurement, or null if no resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "median": {
                    "type": "number",
                    "format": "double",
                    "description": "The median value reported by any resource for the selected measurement, or null if less than 2 resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "minimum": {
                    "type": "number",
                    "format": "double",
                    "description": "The minimum value reported by any resource for the selected measurement, or null if no resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "quartile1": {
                    "type": "number",
                    "format": "double",
                    "description": "The first quartile (Q1) value reported by any resource for the selected measurement, or null if less than 4 resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "quartile3": {
                    "type": "number",
                    "format": "double",
                    "description": "The third quartile (Q3) value reported by any resource for the selected measurement, or null if less than 4 resources reported data ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "stddev": {
                    "type": "number",
                    "format": "double",
                    "description": "The standard deviation reported by any resource for the selected measurement. The standard deviation is calculated using the \"n-1\" method (or Bessel's Correction: https://en.wikipedia.org/wiki/Standard_deviation#Corrected_sample_standard_deviation) therefore if the \"count\" attribute is less than or equal to 1 then standard deviation is undefined and is reported as \"null\" ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Specifies the result group timestamp (in nanoseconds) if time grouping was specified; otherwise, this will be set to 0 ",
                    "allowEmptyValue": false
                }
            },
            "title": "KpiMetricsSummary"
        },
        "KpiSummary": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number",
                    "description": "The number of values in a data series.  Set to 0 if the data series contained no records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "lowerTukeyFence": {
                    "type": "number",
                    "description": "The Lower Tukey Fence (LTF) of a data series, or null if the data series contains less than 4 records LTF is calculated as: Q1 - 1.5 * (Q3 - Q1) ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "maximum": {
                    "type": "number",
                    "description": "The maximum value of a data series, or null if the data series contains no records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "mean": {
                    "type": "number",
                    "description": "The mean value of a data series, or null if the data series contains no records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "median": {
                    "type": "number",
                    "description": "The median value of a data series, or null if the data series contains less than 2 records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "minimum": {
                    "type": "number",
                    "description": "The minimum value of a data series, or null if the data series contains no records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "quartile1": {
                    "type": "number",
                    "description": "The first quartile (Q1) of a data series, or null if the data series contains less than 4 records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "quartile3": {
                    "type": "number",
                    "description": "The third quartile (Q3) of a data series, or null if the data series contains less than 4 records ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "slope": {
                    "type": "number",
                    "description": "The slope of the data series, or null if the data series contains less than 2 records. Slope has been normalized to KPI delta per day ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "stddev": {
                    "type": "number",
                    "description": "The standard deviation of a data series.  The standard deviation is calculated using the \"n-1\" method (or Bessel's Correction: https://en.wikipedia.org/wiki/Standard_deviation#Corrected_sample_standard_deviation) therefore if the \"count\" attribute is less than or equal to 1 then standard deviation is undefined and is reported as \"null\" ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Specifies the result group timestamp (in nanoseconds) if time grouping was specified; otherwise, this will be set to 0 ",
                    "allowEmptyValue": false
                },
                "tvsp": {
                    "type": "number",
                    "description": "The Time Varying System Performance (TVSP) of a data series.  This value is derived from the stddev value therefore it will be null when stddev is null.  This attribute is only applicable to a subset of measurement types and will be reported as null for all other types -- currently that subset includes only Q^2 factor related measurements. TVSP is calculated as: 5 * stddev ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "upperTukeyFence": {
                    "type": "number",
                    "description": "The Upper Tukey Fence (UTF) of a data series, or null if the data series contains less than 4 records UTF is calculated as: Q3 + 1.5 * (Q3 - Q1) ",
                    "readOnly": true,
                    "allowEmptyValue": false
                }
            },
            "title": "KpiSummary"
        },
        "MaintenanceInterval": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Annotation on this maintenance interval ",
                    "allowEmptyValue": false
                },
                "endTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The end time of the maintenance interval as a UNIX Epoch timestamp in milliseconds, in GMT timezone ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the maintenance interval object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the maintenance interval ",
                    "allowEmptyValue": false
                },
                "startTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The start time of the maintenance interval as a UNIX Epoch timestamp in milliseconds, in GMT timezone ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type of maintenance interval ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "MaintenanceInterval"
        },
        "MemoryKpi": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string",
                    "description": "Container name ",
                    "allowEmptyValue": false
                },
                "meanUsage": {
                    "type": "number",
                    "format": "float",
                    "description": "Memory mean usage ",
                    "allowEmptyValue": false
                },
                "meanUsagePercentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Memory mean usage percentage ",
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Measurement timestamp (in nanoseconds) ",
                    "allowEmptyValue": false
                }
            },
            "title": "MemoryKpi"
        },
        "ModelError": {
            "type": "object",
            "properties": {
                "abbreviatedMessage": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "string",
                    "allowEmptyValue": false,
                    "enum": [
                        "unknown_error",
                        "alarm_config_is_in_use",
                        "alarm_config_name_mandatory",
                        "alarm_config_name_must_be_unique",
                        "alarm_config_not_found",
                        "alarm_config_thresholds_inverted",
                        "alarm_config_thresholds_missing",
                        "alarm_config_thresholds_mismatched",
                        "alarm_config_thresholds_overlapped",
                        "alarm_config_thresholds_overlapped_debounced",
                        "alarm_profile_duplicate_measurement",
                        "alarm_profile_is_in_use",
                        "alarm_profile_name_mandatory",
                        "alarm_profile_name_must_be_unique",
                        "alarm_profile_not_found",
                        "alarm_status_not_found",
                        "authenticator_port_and_ip_is_only_available_for_nsp",
                        "authenticator_port_and_ip_should_be_given_for_nsp",
                        "band_is_not_supported",
                        "bucket_does_not_exists",
                        "card_name_mandatory",
                        "card_type_not_found",
                        "card_type_not_supported",
                        "cannot_create_filter_rule_name_exists",
                        "cannot_create_filter_rule_while_sync_enabled",
                        "cannot_delete_filter_rule_while_sync_enabled",
                        "cannot_update_filter_rule_name_exists",
                        "cannot_update_filter_rule_while_sync_enabled",
                        "cloud_storage_configuration_invalid",
                        "connection_update_not_found",
                        "connector_cannot_access_storage",
                        "connector_cannot_write_to_bucket",
                        "connector_not_found",
                        "connector_sync_in_progress",
                        "connector_with_same_data_source_already_exists",
                        "constraint_violation",
                        "data_source_definition_is_not_compliant",
                        "datastore_access_exception_occurred",
                        "direction_is_not_found",
                        "duplicate_alarm_profile_card_type",
                        "duplicate_alarm_profile_port_type",
                        "duplicate_gnmi_configuration_ne_type",
                        "duplicate_pmbin_configuration_ne_type",
                        "duplicate_snmp_configuration_ne_type",
                        "flush_size_should_not_be_empty",
                        "fiber_type_cannot_be_unknown",
                        "field_type_incorrect",
                        "field_validation_failed",
                        "gnmi_config_is_in_use",
                        "gnmi_config_name_mandatory",
                        "gnmi_config_name_must_be_unique",
                        "gnmi_config_not_found",
                        "influxdb_forecast_unable_to_complete",
                        "internal_server_error",
                        "invalid_field_name",
                        "kpi_inconsistent_sample_intervals",
                        "kpi_insufficient_data_points",
                        "kpi_measurement_already_exists",
                        "kpi_measurement_name_or_type_cannot_be_changed",
                        "kpi_measurement_not_found",
                        "kpi_measurement_not_supported_by_alarm_configs",
                        "kpi_metrics_invalid_weighting_method_value",
                        "kpi_metrics_time_weighting_method_and_time_in_search_params",
                        "kpi_non_contiguous_data_series",
                        "kpi_query_begins_with_missing_data",
                        "kpi_sample_interval_too_short",
                        "maintenance_interval_name_must_be_unique",
                        "maintenance_interval_not_found",
                        "missing_a1_z1_link",
                        "missing_a2_z2_link",
                        "network_card_not_found",
                        "network_connection_client_port_mismatch",
                        "network_connection_client_port_read_only",
                        "network_connection_name_mandatory",
                        "network_connection_not_belong_to_group",
                        "network_connection_not_found",
                        "network_connection_port_list_too_short",
                        "network_domain_is_in_use",
                        "network_domain_cannot_delete_last_record",
                        "network_domain_name_mandatory",
                        "network_domain_name_must_be_unique",
                        "network_domain_not_found",
                        "network_domain_should_be_given",
                        "network_element_filter_rule_not_found",
                        "network_element_id_mandatory",
                        "network_element_not_found",
                        "network_element_not_belong_to_group",
                        "network_element_type_not_found",
                        "network_external_link_not_belong_to_group",
                        "network_external_link_not_found",
                        "network_external_link_ports_read_only",
                        "network_group_name_must_be_unique",
                        "network_group_not_found",
                        "network_lightpath_name_mandatory",
                        "network_lightpath_not_belong_to_group",
                        "network_lightpath_not_found",
                        "network_lightpath_ports_read_only",
                        "network_lightpath_unique_ports",
                        "network_manager_external_id_cannot_be_empty",
                        "network_manager_external_id_exists",
                        "network_manager_ip_exist",
                        "network_manager_name_exist",
                        "network_manager_not_found",
                        "network_manager_sync_enable_when_no_filter_rule_enabled",
                        "network_manager_type_not_valid",
                        "network_manager_version_mandatory",
                        "network_port_a1_not_found",
                        "network_port_a2_not_found",
                        "network_port_already_in_use_for_other_external_link",
                        "network_port_already_in_use_for_other_connection",
                        "network_port_already_in_use_for_other_lightpath",
                        "network_port_not_found",
                        "network_port_z1_not_found",
                        "network_port_z2_not_found",
                        "network_reference_derived_esnr_limit_invalid",
                        "network_reference_esnr_coefficients_attribute_cannot_be_modified",
                        "network_reference_esnr_coefficients_must_be_unique",
                        "network_reference_esnr_coefficients_not_found",
                        "network_reference_fec_limit_attribute_cannot_be_modified",
                        "network_reference_fec_limit_must_be_unique",
                        "network_reference_fec_limit_not_found",
                        "network_reference_fiber_type_attribute_cannot_be_modified",
                        "network_reference_fiber_type_must_be_unique",
                        "network_reference_fiber_type_not_found",
                        "network_server_not_found",
                        "network_trend_not_found",
                        "only_greater_or_lesser_filter",
                        "only_order_with_time",
                        "only_filter_with_container_name_or_time",
                        "only_kpi_connector_accepts_partitioning",
                        "otdr_definition_name_must_be_unique",
                        "otdr_definition_not_found",
                        "otdr_direction_is_invalid",
                        "otdr_port_not_found",
                        "otdr_scan_invalid_results_file",
                        "otdr_scan_invalid_file_already_existing",
                        "otdr_scan_invalid_file_missing_block",
                        "otdr_scan_invalid_direction_parameter_value",
                        "otdr_scan_invalid_format_parameter_value",
                        "otdr_scan_invalid_state",
                        "otdr_scan_baseline_request_is_invalid",
                        "otdr_scan_not_found",
                        "otdr_scan_schedule_in_progress_scan",
                        "otdr_scan_schedule_label_is_invalid",
                        "otdr_scan_schedule_not_found",
                        "otdr_scan_schedule_one_shot_param_not_allowed",
                        "otdr_scan_schedule_recurring_enabled_timeframe_is_invalid",
                        "otdr_scan_schedule_recurring_params_missing",
                        "otdr_scan_schedule_recurring_params_not_allowed",
                        "partition_duration_should_be_given",
                        "partitioning_field_should_be_defined",
                        "performance_metrics_search_should_contain_time_filter",
                        "pmbin_config_is_in_use",
                        "pmbin_config_name_must_be_unique",
                        "pmbin_config_not_found",
                        "port_type_not_found",
                        "report_definition_entity_type_not_supported",
                        "report_definition_groups_not_supported",
                        "report_definition_not_found",
                        "report_entity_not_found",
                        "report_file_io_error",
                        "report_group_not_found",
                        "report_not_complete",
                        "report_retention_setting_invalid",
                        "report_run_cancellation_failed",
                        "report_run_not_found",
                        "report_time_parameters_must_not_be_empty",
                        "report_type_invalid",
                        "report_types_get_failed",
                        "request_origin_incorrect_user_role",
                        "rotation_schedule_should_not_be_empty",
                        "s3_cloud_access_key_invalid",
                        "s3_cloud_configuration_invalid",
                        "schedule_cron_string_invalid",
                        "scheduled_report_not_found",
                        "server_not_reachable",
                        "service_unavailable",
                        "setting_name_must_be_unique",
                        "setting_value_is_invalid",
                        "snmp_config_auth_password_mandatory",
                        "snmp_config_community_string_mandatory",
                        "snmp_config_is_in_use",
                        "snmp_config_name_mandatory",
                        "snmp_config_name_must_be_unique",
                        "snmp_config_not_found",
                        "snmp_config_priv_password_mandatory",
                        "snmp_config_security_name_mandatory",
                        "system_defined_kpis_cannot_deleted_or_updated",
                        "weather_config_apikey_mandatory",
                        "weather_config_is_in_use",
                        "weather_config_name_must_be_unique",
                        "weather_config_not_found",
                        "weather_config_last_one_must_be_preserved"
                    ]
                },
                "fields": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "ModelError"
        },
        "NeTypeGnmiConfigMapping": {
            "type": "object",
            "properties": {
                "gnmiConfigId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "neType": {
                    "type": "string",
                    "description": "The Network Type to which this configuration profile will be applied during Network Manager sync The type value specified here is based on the `neType` value attribute of the Network Element object The many possible `neType` values are condensed into a smaller list of common type names used here For example, a Network Element with a `neType` value of \"Nokia 1830 PSS-64\" would be mapped here as a \"Nokia 1830PSSx\", and a \"Nokia 1830 PSI-2\" would be mapped here as a \"Nokia 1830PSS\" Refer to official documentation for the full list of possible values ",
                    "allowEmptyValue": false
                }
            },
            "title": "NeTypeGnmiConfigMapping"
        },
        "NeTypePmBinConfigMapping": {
            "type": "object",
            "properties": {
                "neType": {
                    "type": "string",
                    "description": "The Network Type to which this configuration profile will be applied during Network Manager sync The type value specified here is based on the `neType` value attribute of the Network Element object The many possible `neType` values are condensed into a smaller list of common type names used here For example, a Network Element with a `neType` value of \"Nokia 1830 PSS-64\" would be mapped here as a \"Nokia 1830PSSx\", and a \"Nokia 1830 PSI-2\" would be mapped here as a \"Nokia 1830PSS\" Refer to official documentation for the full list of possible values ",
                    "allowEmptyValue": false
                },
                "pmBinConfigId": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "NeTypePmBinConfigMapping"
        },
        "NeTypeSnmpConfigMapping": {
            "type": "object",
            "properties": {
                "neType": {
                    "type": "string",
                    "description": "The Network Type to which this configuration profile will be applied during Network Manager sync The type value specified here is based on the `neType` value attribute of the Network Element object The many possible `neType` values are condensed into a smaller list of common type names used here For example, a Network Element with a `neType` value of \"Nokia 1830 PSS-64\" would be mapped here as a \"Nokia 1830PSSx\", and a \"Nokia 1830 PSI-2\" would be mapped here as a \"Nokia 1830PSS\" Refer to official documentation for the full list of possible values ",
                    "allowEmptyValue": false
                },
                "snmpConfigId": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "NeTypeSnmpConfigMapping"
        },
        "NetworkCard": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which Network Port is associated ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for this resource",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for this resource.  Cannot be updated",
                    "allowEmptyValue": false
                },
                "neId": {
                    "type": "string",
                    "description": "Unique identifier of the Network Element to which this card belongs.  Cannot be updated ",
                    "allowEmptyValue": false
                },
                "number": {
                    "type": "string",
                    "description": "The logical identifier for this card resource similar to the logical identifier used in the Network Port object model.  For example, \"1/2\" for a card located in shelf 1, slot 2 would allow telemetry data reported against \"CARD-1-2\" to be linked to this inventory object ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type value associated to this resource",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkCard"
        },
        "NetworkCardOverview": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which Network Port is associated ",
                    "allowEmptyValue": false
                },
                "alarmProfileName": {
                    "type": "string",
                    "description": "Name of the Alarm Profile to which Network Port is associated ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "A list of network group names ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for this resource",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for this resource.  Cannot be updated",
                    "allowEmptyValue": false
                },
                "neId": {
                    "type": "string",
                    "description": "Unique identifier of the Network Element to which this card belongs.  Cannot be updated ",
                    "allowEmptyValue": false
                },
                "neName": {
                    "type": "string",
                    "description": "Network element name",
                    "allowEmptyValue": false
                },
                "number": {
                    "type": "string",
                    "description": "The logical identifier for this card resource similar to the logical identifier used in the Network Port object model.  For example, \"1/2\" for a card located in shelf 1, slot 2 would allow telemetry data reported against \"CARD-1-2\" to be linked to this inventory object ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type value associated to this resource",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkCardOverview"
        },
        "NetworkConnection": {
            "type": "object",
            "properties": {
                "a1EndPortId": {
                    "type": "string",
                    "description": "The unique identifier of the A end client port.  Cannot be updated.  Until the POST command at /network-connections/{connectionId}/network-ports endpoint is removed it is expected that the 0th port in that list be the same UUID value that is specified here in the A1 port UUID ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "List of group Ids the connection belongs to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "layerRate": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for this resource",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the network connection belongs to ",
                    "allowEmptyValue": false
                },
                "protectionType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "z1EndPortId": {
                    "type": "string",
                    "description": "The unique identifier of the Z end client port.  Cannot be updated.  Until the POST command at /network-connections/{connectionId}/network-ports endpoint is removed it is expected that the Nth port in that list be the same UUID value that is specified here in the Z1 port UUID ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkConnection"
        },
        "NetworkConnectionOverview": {
            "type": "object",
            "properties": {
                "aEndNeId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "aEndNeName": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "aEndPortName": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "externalLinkCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of external link that this connection is using, indirectly, via lightpaths ",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "A list of network group names ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "layerRate": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "lightpathCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of lightpaths that this connection is using ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the network connection belongs to ",
                    "allowEmptyValue": false
                },
                "overallTrend": {
                    "type": "string",
                    "description": "The overall trend represents the trend value of the most severe alarm status record currently active against this particular Network Connection object ",
                    "allowEmptyValue": false
                },
                "protectionType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "secondaryGroupList": {
                    "type": "array",
                    "description": "A list of the network group names that entities related to this connection belong to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "zEndNeId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "zEndNeName": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "zEndPortName": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkConnectionOverview"
        },
        "NetworkConnectionSummaryItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkConnectionSummaryItem"
        },
        "NetworkConnectionTrend": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "level": {
                    "type": "string",
                    "description": "The network connection trend of the given connection for measurement ",
                    "allowEmptyValue": false
                },
                "measurement": {
                    "type": "string",
                    "description": "The KPI metric name to be monitored ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkConnectionTrend"
        },
        "NetworkConnectionTrendList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/NetworkConnectionTrend"
                    }
                }
            },
            "title": "NetworkConnectionTrendList"
        },
        "NetworkConnectionTrendSummary": {
            "type": "object",
            "properties": {
                "levels": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/NetworkConnectionSummaryItem"
                    }
                },
                "measurement": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkConnectionTrendSummary"
        },
        "NetworkConnectionTrendSummaryList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/NetworkConnectionTrendSummary"
                    }
                }
            },
            "title": "NetworkConnectionTrendSummaryList"
        },
        "NetworkDomain": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "cardAlarmProfiles": {
                    "type": "array",
                    "description": "Object that maps card types to default Alarm Profile ID to apply by default. Card types that are not specified here will not be associated to an alarm profile ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CardTypeAlarmProfileMapping"
                    }
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "neAlarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the NE Alarm Profile to apply by default",
                    "allowEmptyValue": false
                },
                "neGnmiConfigs": {
                    "type": "array",
                    "description": "Object that maps network element types to default gNMI configuration ID to apply by default Network element types that are not specified here will not be associated to a gNMI configuration ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/NeTypeGnmiConfigMapping"
                    }
                },
                "nePmBinConfigs": {
                    "type": "array",
                    "description": "Object that maps network element types to default PM Bin configuration ID to apply by default Network element types that are not specified here will not be associated to a PM Bin configuration ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/NeTypePmBinConfigMapping"
                    }
                },
                "neSnmpConfigs": {
                    "type": "array",
                    "description": "Object that maps network element types to default SNMP configuration ID to apply by default Network element types that are not specified here will not be associated to a SNMP configuration ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/NeTypeSnmpConfigMapping"
                    }
                },
                "portAlarmProfiles": {
                    "type": "array",
                    "description": "Object that maps port types to default Alarm Profile ID to apply by default. Port types that are not specified here will not be associated to an alarm profile ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PortTypeAlarmProfileMapping"
                    }
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "weatherConfigId": {
                    "type": "string",
                    "description": "Identifier of the Weather Configuration to which this Network Domain is associated. Network Managers associated with this domain will inherit the Weather config configured in this domain ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkDomain"
        },
        "NetworkElement": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which the Network Element is associated ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "ipAddress": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "latitude": {
                    "type": "number",
                    "allowEmptyValue": false
                },
                "locationName": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "longitude": {
                    "type": "number",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "networkElementGnmiConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the gNMI config which should be used when configuring this network element.  If the network element does not support gNMI or if gNMI functionality is not required for this network element then this field can be omitted.  If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced gNMI config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                },
                "networkElementPmBinConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the PM Bin config which should be used when retrieving PM Bins via NFM-T.  If the NFM-T-based PM Bin retrieval functionality is not required for this network element then this field can be omitted.  If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced PM Bin config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                },
                "networkElementSnmpConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the SNMP config which should be used when configuring this network element.  If the network element does not support SNMP or if SNMP functionality is not required for this network element then this field can be omitted.  If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced SNMP config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network Manager id that the Network Element belongs to ",
                    "allowEmptyValue": false
                },
                "nodeType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "version": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "weatherConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the weather config associated to this network element If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced weather config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkElement"
        },
        "NetworkElementFilterRule": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "allowEmptyValue": false
                },
                "fieldName": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "fieldValue": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the network element filter rule data belongs to ",
                    "allowEmptyValue": false
                },
                "operation": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "ruleType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkElementFilterRule"
        },
        "NetworkElementGnmiConfig": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Controls whether data collection is enabled/disabled for any resources associated to this configuration profile ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Identifier of the Network Element gNMI Config ",
                    "allowEmptyValue": false
                },
                "insecure": {
                    "type": "boolean",
                    "example": false,
                    "description": "Connection security definition ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of the gNMI config, which will help to differentiate the configuration. It should be valid string which is not null, not empty. For each object, attribute name must be unique ",
                    "allowEmptyValue": false
                },
                "password": {
                    "type": "string",
                    "description": "Password to connect device. Note that this property is write only and will be redacted in the response ",
                    "allowEmptyValue": false
                },
                "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port of the gNMI connection ",
                    "allowEmptyValue": false
                },
                "sampleInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Interval for sampling the data ",
                    "allowEmptyValue": false
                },
                "subscriptions": {
                    "type": "array",
                    "description": "Defines the which subscriptions will be listened ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "username": {
                    "type": "string",
                    "description": "User name to connect device ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkElementGnmiConfig"
        },
        "NetworkElementOverview": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which the Network Element is associated ",
                    "allowEmptyValue": false
                },
                "alarmProfileName": {
                    "type": "string",
                    "description": "Name of the Alarm Profile to which the Network Element is associated ",
                    "allowEmptyValue": false
                },
                "connectivityState": {
                    "type": "string",
                    "description": "The global connectivity state for the NE, calculated from the different protocol states: Down (if at least one state is Down or Unknown). Up (if all states are either not-configured or Up AND at least one state is Up). Not Configured (if all protocol types are not present). ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "A list of network group names ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "ipAddress": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "latitude": {
                    "type": "number",
                    "allowEmptyValue": false
                },
                "locationName": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "longitude": {
                    "type": "number",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "networkElementGnmiConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the gNMI config which should be used when configuring this network element.  If the network element does not support gNMI or if gNMI functionality is not required for this network element then this field can be omitted.  If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced gNMI config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                },
                "networkElementPmBinConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the PM Bin config which should be used when retrieving PM Bins via NFM-T.  If the NFM-T-based PM Bin retrieval functionality is not required for this network element then this field can be omitted.  If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced PM Bin config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                },
                "networkElementSnmpConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the SNMP config which should be used when configuring this network element.  If the network element does not support SNMP or if SNMP functionality is not required for this network element then this field can be omitted.  If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced SNMP config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network Manager id that the Network Element belongs to ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "version": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "weatherConfigId": {
                    "type": "string",
                    "description": "The unique identifier which represents the weather config associated to this network element If this attribute is selected as a sort attribute then the \"name\" attribute of the referenced weather config will be used as the sort key rather than the actual UUID reference ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkElementOverview"
        },
        "NetworkElementPmBinConfig": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Controls whether data collection is enabled/disabled for any resources associated to this configuration profile ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Identifier of the Network Element PM Bin Config ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of the PM Bin config, which will help to differentiate the configuration. It should be a valid string which is not null, not empty. For each object, attribute name must be unique ",
                    "allowEmptyValue": false
                },
                "subscriptions": {
                    "type": "array",
                    "description": "Defines the which subscriptions will be listened ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkElementPmBinConfig"
        },
        "NetworkElementSnmpConfig": {
            "type": "object",
            "required": [
                "name",
                "snmpVersion"
            ],
            "properties": {
                "authenticationPassword": {
                    "type": "string",
                    "description": "Authentication password of the SNMP connection. Note that this property is write only and will be redacted in the response ",
                    "allowEmptyValue": false
                },
                "authenticationProtocol": {
                    "type": "string",
                    "description": "Authentication protocol of the SNMP connection (default: MD5).  The \"SHA\" value is an alias for the \"SHA1\" protocol ",
                    "allowEmptyValue": false
                },
                "communityString": {
                    "type": "string",
                    "description": "Community string of the connection ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Controls whether data collection is enabled/disabled for any resources associated to this configuration profile ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Identifier of the Network Element SNMP Config ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SNMP config, which will help to differentiate the configuration. It should be valid string which is not null, not empty. For each object, attribute name must be unique ",
                    "allowEmptyValue": false
                },
                "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port of the SNMP connection (default: 161) ",
                    "allowEmptyValue": false
                },
                "privacyPassword": {
                    "type": "string",
                    "description": "Privacy password of the SNMP connection. Note that this property is write only and will be redacted in the response ",
                    "allowEmptyValue": false
                },
                "privacyProtocol": {
                    "type": "string",
                    "description": "Privacy protocol of the SNMP connection (default: AES).  The \"AES\" value is an alias for the \"AES128\" protocol ",
                    "allowEmptyValue": false
                },
                "securityName": {
                    "type": "string",
                    "description": "Security name of the connection ",
                    "allowEmptyValue": false
                },
                "snmpVersion": {
                    "type": "string",
                    "description": "Version of the SNMP connection. V2 or V3 ",
                    "allowEmptyValue": false
                },
                "subscriptions": {
                    "type": "array",
                    "description": "The list of SNMP MIB object names to be accepted when parsing PM Bin files (e.g., tnOptStat*) Excluding this attribute results in all MIB object names being accepted ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkElementSnmpConfig"
        },
        "NetworkExternalLink": {
            "type": "object",
            "properties": {
                "a1EndPortId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "a2EndPortId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "band": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "connectionType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "direction": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "fiberLength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the fiber in kilometers ",
                    "allowEmptyValue": false
                },
                "fiberType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "List of group Ids the external link belongs to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the external link belongs to ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "z1EndPortId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "z2EndPortId": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkExternalLink"
        },
        "NetworkExternalLinkOverview": {
            "type": "object",
            "properties": {
                "a1EndNeId": {
                    "type": "string",
                    "description": "The ID of the NE of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a1EndNeName": {
                    "type": "string",
                    "description": "The name of the NE of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a1EndPortAlarmProfileId": {
                    "type": "string",
                    "description": "The alarm profile ID of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a1EndPortId": {
                    "type": "string",
                    "description": "The ID of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a1EndPortName": {
                    "type": "string",
                    "description": "The name of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a1EndPortNumber": {
                    "type": "string",
                    "description": "The number of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a1EndPortType": {
                    "type": "string",
                    "description": "The type of the A1 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndNeId": {
                    "type": "string",
                    "description": "The ID of the NE of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndNeName": {
                    "type": "string",
                    "description": "The name of the NE of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndPortAlarmProfileId": {
                    "type": "string",
                    "description": "The alarm profile ID of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndPortId": {
                    "type": "string",
                    "description": "The ID of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndPortName": {
                    "type": "string",
                    "description": "The name of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndPortNumber": {
                    "type": "string",
                    "description": "The number of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "a2EndPortType": {
                    "type": "string",
                    "description": "The type of the A2 port on the external link ",
                    "allowEmptyValue": false
                },
                "band": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "baselineAzOtdrScanId": {
                    "type": "string",
                    "description": "Identifier of the OTDR scan (if any) set as baseline for A to Z direction ",
                    "allowEmptyValue": false
                },
                "baselineZaOtdrScanId": {
                    "type": "string",
                    "description": "Identifier of the OTDR scan (if any) set as baseline for Z to A direction ",
                    "allowEmptyValue": false
                },
                "connectionCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of connections using this external link, indirectly, via lightpaths ",
                    "allowEmptyValue": false
                },
                "connectionType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "direction": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "fiberLength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the fiber in kilometers ",
                    "allowEmptyValue": false
                },
                "fiberType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "List of group names the external link belongs to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the external link ",
                    "allowEmptyValue": false
                },
                "lightpathCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of lightpaths using this external link ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the external link belongs to ",
                    "allowEmptyValue": false
                },
                "otdrCapable": {
                    "type": "string",
                    "description": "Overall OTDR capability of the external link taking into account if the A or Z endports are associated to an OTDR port. Possible values are 'None', 'A_to_Z', 'Z_to_A' and 'Bidirectional' ",
                    "allowEmptyValue": false
                },
                "overallTrend": {
                    "type": "string",
                    "description": "The overall trend represents the trend value of the most severe alarm status record currently active against this particular Network External Link object ",
                    "allowEmptyValue": false
                },
                "secondaryGroupList": {
                    "type": "array",
                    "description": "A list of the network group names that entities related to this external link belong to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "z1EndNeId": {
                    "type": "string",
                    "description": "The ID of the NE of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z1EndNeName": {
                    "type": "string",
                    "description": "The name of the NE of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z1EndPortAlarmProfileId": {
                    "type": "string",
                    "description": "The alarm profile ID of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z1EndPortId": {
                    "type": "string",
                    "description": "The ID of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z1EndPortName": {
                    "type": "string",
                    "description": "The name of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z1EndPortNumber": {
                    "type": "string",
                    "description": "The number of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z1EndPortType": {
                    "type": "string",
                    "description": "The type of the Z1 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndNeId": {
                    "type": "string",
                    "description": "The ID of the NE of the Z2 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndNeName": {
                    "type": "string",
                    "description": "The name of the NE of the Z2 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndPortAlarmProfileId": {
                    "type": "string",
                    "description": "The alarm profile ID of the Z2 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndPortId": {
                    "type": "string",
                    "description": "The ID of the Z2 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndPortName": {
                    "type": "string",
                    "description": "The name of the Z2 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndPortNumber": {
                    "type": "string",
                    "description": "The number of the Z2 port on the external link ",
                    "allowEmptyValue": false
                },
                "z2EndPortType": {
                    "type": "string",
                    "description": "The type of the Z2 port on the external link ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkExternalLinkOverview"
        },
        "NetworkGroup": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Annotation on this network group ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the network group object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the network group ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkGroup"
        },
        "NetworkKpi": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string",
                    "description": "Container name ",
                    "allowEmptyValue": false
                },
                "rxBytes": {
                    "type": "number",
                    "format": "float",
                    "description": "Container received bytes ",
                    "allowEmptyValue": false
                },
                "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Measurement timestamp (in nanoseconds) ",
                    "allowEmptyValue": false
                },
                "txBytes": {
                    "type": "number",
                    "format": "float",
                    "description": "Container transmitted bytes ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkKpi"
        },
        "NetworkLightpath": {
            "type": "object",
            "required": [
                "a1EndPortId",
                "frequency",
                "layerRate",
                "name",
                "protectionType",
                "z1EndPortId"
            ],
            "properties": {
                "a1EndPortId": {
                    "type": "string",
                    "description": "The unique identifier of the A end transponder port.  Cannot be updated",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "frequency": {
                    "type": "number",
                    "format": "float",
                    "description": "The lightpath wavelength frequence (e.g., 9300.0)",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "List of group Ids the network lightpath belongs to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for this resource",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "layerRate": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for this resource",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the network lightpath belongs to (optional) ",
                    "allowEmptyValue": false
                },
                "protectionType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "z1EndPortId": {
                    "type": "string",
                    "description": "The unique identifier of the Z end transponder port.  Cannot be updated",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkLightpath"
        },
        "NetworkLightpathOverview": {
            "type": "object",
            "properties": {
                "a1EndNeId": {
                    "type": "string",
                    "description": "The network element ID value this is specified in the network port object referenced by the a1EndPortId attribute of this lightpath object ",
                    "allowEmptyValue": false
                },
                "a1EndNeName": {
                    "type": "string",
                    "description": "The name of the A1 end network element object that is referenced by the aEndPortId attribute of this lightpath object ",
                    "allowEmptyValue": false
                },
                "a1EndPortName": {
                    "type": "string",
                    "description": "The name of the A1 end port object that is referenced by the aEndPortId attribute of this  lightpath object ",
                    "allowEmptyValue": false
                },
                "connectionCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of connections that are using this lightpath ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "externalLinkCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of external links that this lightpath is using ",
                    "allowEmptyValue": false
                },
                "frequency": {
                    "type": "number",
                    "format": "float",
                    "description": "The lightpath wavelength frequence (e.g., 9300.0)",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "List of group names the network lightpath belongs to ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for this resource",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "layerRate": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The unique name for this resource.  Cannot be updated",
                    "allowEmptyValue": false
                },
                "networkManagerId": {
                    "type": "string",
                    "description": "Network manager id that the network lightpath belongs to (optional) ",
                    "allowEmptyValue": false
                },
                "protectionType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "z1EndNeId": {
                    "type": "string",
                    "description": "The network element ID value this is specified in the network port object referenced by the a1EndPortId attribute of this lightpath object ",
                    "allowEmptyValue": false
                },
                "z1EndNeName": {
                    "type": "string",
                    "description": "The name of the Z1 end network element object that is referenced by the zEndPortId attribute of this lightpath object ",
                    "allowEmptyValue": false
                },
                "z1EndPortName": {
                    "type": "string",
                    "description": "The name of the Z1 end port object that is referenced by the zEndPortId attribute of this  lightpath object ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkLightpathOverview"
        },
        "NetworkManager": {
            "type": "object",
            "required": [
                "ipAddress",
                "networkDomainId",
                "password",
                "syncEnabled",
                "syncInterval",
                "type"
            ],
            "properties": {
                "alarmPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port for the connection to network manager ",
                    "allowEmptyValue": false
                },
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which Network Manager is associated ",
                    "allowEmptyValue": false
                },
                "authenticationType": {
                    "type": "string",
                    "description": "The authentication type for the network manager. Currently, two options available directly NFM-T or NSP. For NSP authentication, both NSP and NFM-T ip addresses and ports are required ",
                    "allowEmptyValue": false
                },
                "authenticatorIpAddress": {
                    "type": "string",
                    "description": "IP address of the authenticator ",
                    "allowEmptyValue": false
                },
                "authenticatorPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port to connect authenticator ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type. It can be a null value but empty strings are not allowed ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Identifier of the network manager ",
                    "allowEmptyValue": false
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the network manager ",
                    "allowEmptyValue": false
                },
                "lastSynchronizationOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the Network Manager was synchronizated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of network manager ",
                    "allowEmptyValue": false
                },
                "networkDomainId": {
                    "type": "string",
                    "description": "Identifier of the Network Domain to which this Network Manager is associated. All automatically discovered Network Elements will inherit the gNMI and SNMP attributes configured against this domain ",
                    "allowEmptyValue": false
                },
                "password": {
                    "type": "string",
                    "description": "Password to connect network manager. Note that this property is write only and will be redacted in the response ",
                    "allowEmptyValue": false
                },
                "pmCountersEnabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if NFM-T-based PM Bin retrieval is enabled for this Network Manager. This option only has an effect if the NFM-T version is at least 21.12, and only for Network Element instances where related PM Bin Configs are configured and enabled. ",
                    "allowEmptyValue": false
                },
                "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port to connect network manager ",
                    "allowEmptyValue": false
                },
                "ssl": {
                    "type": "boolean",
                    "example": false,
                    "description": "Defines if connection is on SSL or not ",
                    "allowEmptyValue": false
                },
                "syncEnabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Defines if network manager is ready to sync ",
                    "allowEmptyValue": false
                },
                "syncInterval": {
                    "type": "string",
                    "description": "The time interval in milliseconds to periodically sync the network manager This configuration ensures that NFM-Ts are synced at every configured interval Supported intervals are: 1 hour, 2 hour, 4 hour, 8 hour, 1 day, 1 week and none (0 means none and no periodic resync) ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "Type of the network manager. Only NFM-T is accepted. Other values will be rejected ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "username": {
                    "type": "string",
                    "description": "User name to connect network manager ",
                    "allowEmptyValue": false
                },
                "version": {
                    "type": "string",
                    "description": "Version of the network manager ",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkManager"
        },
        "NetworkPort": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which Network Port is associated ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "encodingType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "frequency": {
                    "type": "number",
                    "format": "float",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "layerRate": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "neId": {
                    "type": "string",
                    "description": "Unique identifier of the Network Element to which this port belongs. Cannot be updated ",
                    "allowEmptyValue": false
                },
                "otdrPortId": {
                    "type": "string",
                    "description": "Identifier of the associated OTDR port ",
                    "allowEmptyValue": false
                },
                "phaseEncoding": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "portNumber": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "portType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkPort"
        },
        "NetworkPortOverview": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "description": "Identifier of the Alarm Profile to which Network Port is associated ",
                    "allowEmptyValue": false
                },
                "alarmProfileName": {
                    "type": "string",
                    "description": "Name of the Alarm Profile to which Network Port is associated ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "connectionCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of network connections to which Network Port is associated ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "encodingType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "externalId": {
                    "type": "string",
                    "description": "Free form field to be used by thirdparty systems to create a unique identifier as a back reference to their data model.  It is expected to be unique across all resources of this type ",
                    "allowEmptyValue": false
                },
                "frequency": {
                    "type": "number",
                    "format": "float",
                    "allowEmptyValue": false
                },
                "groupList": {
                    "type": "array",
                    "description": "A list of network group names ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "layerRate": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "neId": {
                    "type": "string",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "neName": {
                    "type": "string",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "operationalModeId": {
                    "type": "integer",
                    "format": "int32",
                    "allowEmptyValue": false
                },
                "otdrPortId": {
                    "type": "string",
                    "description": "Identifier of the associated OTDR port ",
                    "allowEmptyValue": false
                },
                "otdrPortName": {
                    "type": "string",
                    "description": "Name of the associated OTDR port ",
                    "allowEmptyValue": false
                },
                "phaseEncoding": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "portNumber": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "portType": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkPortOverview"
        },
        "NetworkReferenceEsnrCoefficients": {
            "type": "object",
            "properties": {
                "coefficientB": {
                    "type": "number",
                    "format": "float",
                    "description": "The 'b' coefficient that should be used for calculations with this modulation type ",
                    "allowEmptyValue": false
                },
                "coefficientC": {
                    "type": "number",
                    "format": "float",
                    "description": "The 'c' coefficient that should be used for calculations with this modulation type ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this ESNR calculation coefficients reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "modulation": {
                    "type": "string",
                    "description": "The modulation type to which the coefficients apply ",
                    "allowEmptyValue": false
                },
                "snrThreshold": {
                    "type": "number",
                    "format": "float",
                    "description": "The SNR threshold used in calculating derived values of Weighted ESNR ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkReferenceEsnrCoefficients",
            "description": "ESNR calculation coefficients reference data entry"
        },
        "NetworkReferenceFecLimit": {
            "type": "object",
            "properties": {
                "baudRate": {
                    "type": "number",
                    "format": "float",
                    "description": "The baud rate for this configuration (in Gbd) ",
                    "allowEmptyValue": false
                },
                "cardName": {
                    "type": "string",
                    "description": "The card name to which the reference limits apply ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "chromaticDispersion": {
                    "type": "number",
                    "format": "float",
                    "description": "The Chromatic Dispersion Tolerance (with 0.5dB penalty) for this configuration (in ps/nm) ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "encoding": {
                    "type": "string",
                    "description": "The encoding type to which the reference limits apply ",
                    "allowEmptyValue": false
                },
                "esnrLimit": {
                    "type": "number",
                    "format": "float",
                    "description": "The ESNR Limit for this configuration. This is a derived attribute and cannot be modified directly ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "fecType": {
                    "type": "string",
                    "description": "The FEC type to which the reference limits apply ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this FEC Limit reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "linePortMode": {
                    "type": "string",
                    "description": "The mode in which the line port is operating ",
                    "allowEmptyValue": false
                },
                "lineRate": {
                    "type": "number",
                    "format": "float",
                    "description": "The line rate for this configuration (in Gb/s) ",
                    "allowEmptyValue": false
                },
                "maxDgd": {
                    "type": "number",
                    "format": "float",
                    "description": "The Maximum Differential Group Delay (with 0.5dB penalty) for this configuration (in ps) ",
                    "allowEmptyValue": false
                },
                "modulation": {
                    "type": "string",
                    "description": "The modulation type to which the reference limits apply ",
                    "allowEmptyValue": false
                },
                "operationalModeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The operational mode ID to which the reference limits apply ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "preFecLimit": {
                    "type": "number",
                    "format": "float",
                    "description": "The FEC limit expressed as a BER value ",
                    "allowEmptyValue": false
                },
                "q2FecLimit": {
                    "type": "number",
                    "format": "float",
                    "description": "The FEC limit expressed as a Q^2 value (in dB) ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkReferenceFecLimit",
            "description": "FEC Limit reference data entry"
        },
        "NetworkReferenceFiberType": {
            "type": "object",
            "properties": {
                "attenuation": {
                    "type": "number",
                    "format": "float",
                    "description": "The attenuation for this fiber type (in dB/km) ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "dispersion": {
                    "type": "number",
                    "format": "float",
                    "description": "The dispersion value for this fiber type at a wavelength of 1.55μm (in ps/(nm * km)) ",
                    "allowEmptyValue": false
                },
                "dispersionMaximum": {
                    "type": "number",
                    "format": "float",
                    "description": "The maximum dispersion value for this fiber type at a wavelength of 1.55μm (in ps/(nm * km)) ",
                    "allowEmptyValue": false
                },
                "dispersionMinimum": {
                    "type": "number",
                    "format": "float",
                    "description": "The minimum dispersion value for this fiber type at a wavelength of 1.55μm (in ps/(nm * km)) ",
                    "allowEmptyValue": false
                },
                "dispersionSlope": {
                    "type": "number",
                    "format": "float",
                    "description": "The slope of the dispersion for this fiber type at a wavelength of 1.55μm (in ps/(nm^2 * km)) ",
                    "allowEmptyValue": false
                },
                "dispersionSlopeMaximum": {
                    "type": "number",
                    "format": "float",
                    "description": "The maximum slope of the dispersion for this fiber type at a wavelength of 1.55μm (in ps/(nm^2 * km)) ",
                    "allowEmptyValue": false
                },
                "dispersionSlopeMinimum": {
                    "type": "number",
                    "format": "float",
                    "description": "The minimum slope of the dispersion for this fiber type at a wavelength of 1.55μm (in ps/(nm^2 * km)) ",
                    "allowEmptyValue": false
                },
                "effectiveSurface": {
                    "type": "number",
                    "format": "float",
                    "description": "The effective surface area for this fiber type (in μm^2) ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this Fiber Type reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "The name of the fiber type ",
                    "allowEmptyValue": false
                },
                "specification": {
                    "type": "string",
                    "description": "The name of the standard specification to which this fiber type conforms ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "NetworkReferenceFiberType",
            "description": "Fiber Type reference data entry"
        },
        "OtdrDefinition": {
            "type": "object",
            "properties": {
                "acquisitionTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan acquisition time (in seconds) ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this OTDR scan reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "A name for the OTDR definition ",
                    "allowEmptyValue": false
                },
                "pulseWidthNS": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan pulse width (in nanoseconds) ",
                    "allowEmptyValue": false
                },
                "rangeM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan range (in meters) ",
                    "allowEmptyValue": false
                },
                "samplingResolutionM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan sampling resolution (in meters) ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrDefinition",
            "description": "OTDR definition data entry"
        },
        "OtdrEvent": {
            "type": "object",
            "properties": {
                "distanceM": {
                    "type": "number",
                    "format": "double",
                    "description": "Distance in meters ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "eventNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Event Number ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "lossDb": {
                    "type": "number",
                    "format": "double",
                    "description": "Loss in dB ",
                    "allowEmptyValue": false
                },
                "reflectionDb": {
                    "type": "number",
                    "format": "double",
                    "description": "Reflection dB ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanId": {
                    "type": "string",
                    "description": "The unique identifier of the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrEvent",
            "description": "OTDR scan key event"
        },
        "OtdrReportUpdate": {
            "type": "object",
            "properties": {
                "genParams": {
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/OtdrReportUpdateGenParams"
                },
                "keyEvents": {
                    "type": "array",
                    "description": "The list of key events information ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/OtdrReportUpdateKeyEvent"
                    }
                }
            },
            "title": "OtdrReportUpdate"
        },
        "OtdrReportUpdateGenParams": {
            "type": "object",
            "properties": {
                "cableCode": {
                    "type": "string",
                    "description": "Cable code ",
                    "allowEmptyValue": false
                },
                "cableID": {
                    "type": "string",
                    "description": "Cable ID ",
                    "allowEmptyValue": false
                },
                "comment": {
                    "type": "string",
                    "description": "Comment ",
                    "allowEmptyValue": false
                },
                "fiberID": {
                    "type": "string",
                    "description": "Fiber ID ",
                    "allowEmptyValue": false
                },
                "originatingLocation": {
                    "type": "string",
                    "description": "Originating location ",
                    "allowEmptyValue": false
                },
                "terminatingLocation": {
                    "type": "string",
                    "description": "Terminating location ",
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrReportUpdateGenParams"
        },
        "OtdrReportUpdateKeyEvent": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Comment ",
                    "allowEmptyValue": false
                },
                "eventNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Event Number ",
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrReportUpdateKeyEvent"
        },
        "OtdrScanBaseline": {
            "type": "object",
            "required": [
                "baseline"
            ],
            "properties": {
                "baseline": {
                    "type": "boolean",
                    "example": false,
                    "description": "Sets the baseline condition of the scan ",
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrScanBaseline"
        },
        "OtdrScanOverview": {
            "type": "object",
            "properties": {
                "acquisitionTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan acquisition time (in seconds) ",
                    "allowEmptyValue": false
                },
                "averageLossDbKm": {
                    "type": "number",
                    "format": "double",
                    "description": "Average loss in dB/Km ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "baseline": {
                    "type": "boolean",
                    "example": false,
                    "description": "Flag to indicate if the scan has been set as baseline ",
                    "allowEmptyValue": false
                },
                "errorCode": {
                    "type": "string",
                    "description": "Error code of the OTDR Scan when the scanState contains a final state, different from completedAndSaved ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "errorDetails": {
                    "type": "string",
                    "description": "Additional information when there is an error ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "events": {
                    "type": "array",
                    "description": "List of Key Event OtdrEvent detail",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/OtdrEvent"
                    }
                },
                "externalLinkId": {
                    "type": "string",
                    "description": "The unique identifier of the External Link ",
                    "allowEmptyValue": false
                },
                "externalLinkName": {
                    "type": "string",
                    "description": "Name of the external link ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this OTDR scan reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "label": {
                    "type": "string",
                    "description": "A label for the OTDR scan ",
                    "allowEmptyValue": false
                },
                "networkElementId": {
                    "type": "string",
                    "description": "The unique identifier of the NE of the scan port on the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "networkElementName": {
                    "type": "string",
                    "description": "The name of the NE of the scan port on the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "opticalReturnLossDb": {
                    "type": "number",
                    "format": "double",
                    "description": "Optical return loss in dB ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "otdrDefinitionName": {
                    "type": "string",
                    "description": "The name of the OTDR Definition used in the creation ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "pulseWidthNS": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan pulse width (in nanoseconds) ",
                    "allowEmptyValue": false
                },
                "rangeM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan range (in meters) ",
                    "allowEmptyValue": false
                },
                "reportUpdated": {
                    "type": "boolean",
                    "example": false,
                    "description": "Flag to indicate if the scan report was updated ",
                    "allowEmptyValue": false
                },
                "samplingResolutionM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan sampling resolution (in meters) ",
                    "allowEmptyValue": false
                },
                "scanDirection": {
                    "type": "string",
                    "description": "Direction of the scan ",
                    "allowEmptyValue": false
                },
                "scanLastUpdate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan record update timestamp (in milliseconds) ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanPortId": {
                    "type": "string",
                    "description": "The unique identifier of the port of the External Link that is the target of the OTDR scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanPortName": {
                    "type": "string",
                    "description": "The name of the scan port on the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanScheduleId": {
                    "type": "string",
                    "description": "The unique identifier of the OTDR schedule ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanStartTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan start timestamp (in milliseconds) ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanState": {
                    "type": "string",
                    "description": "State of the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "source": {
                    "type": "string",
                    "description": "Source of the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "totalLengthM": {
                    "type": "number",
                    "format": "double",
                    "description": "Total length in meters ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "totalLossDb": {
                    "type": "number",
                    "format": "double",
                    "description": "Total loss in dB ",
                    "readOnly": true,
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrScanOverview",
            "description": "OTDR scan reference data entry"
        },
        "OtdrScanSchedule": {
            "type": "object",
            "properties": {
                "acquisitionTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan acquisition time (in seconds) ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Controls whether recurring scans associated to this schedule configuration must be executed or not (it can be used to disable temporarily the recurring scans) This is a recurring scan related parameter. Note that for enabled recurring scans parameters, 'enabledStartTime' and 'enabledEndTime' can be used to limit the scans timeframe to a particular period ",
                    "allowEmptyValue": false
                },
                "enabledEndTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The end time of the recurring scan interval as a UNIX Epoch timestamp in milliseconds, in GMT timezone. The value of this parameter must be greater than the value of the 'enabledStartTime' parameter This is a recurring scan related parameter ",
                    "allowEmptyValue": false
                },
                "enabledStartTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The start time of the recurring scan interval as a UNIX Epoch timestamp in milliseconds, in GMT timezone. This is a recurring scan related parameter ",
                    "allowEmptyValue": false
                },
                "externalLinkId": {
                    "type": "string",
                    "description": "The unique identifier of the External Link ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this OTDR scan reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "label": {
                    "type": "string",
                    "description": "A label for the OTDR scan ",
                    "allowEmptyValue": false
                },
                "otdrDefinitionId": {
                    "type": "string",
                    "description": "The unique identifier of the OTDR Definition to be used in the creation ",
                    "allowEmptyValue": false
                },
                "otdrDefinitionName": {
                    "type": "string",
                    "description": "The name of the OTDR Definition used in the creation ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "pulseWidthNS": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan pulse width (in nanoseconds) ",
                    "allowEmptyValue": false
                },
                "rangeM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan range (in meters) ",
                    "allowEmptyValue": false
                },
                "samplingResolutionM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan sampling resolution (in meters) ",
                    "allowEmptyValue": false
                },
                "scanDirection": {
                    "type": "string",
                    "description": "Direction of the scan ",
                    "allowEmptyValue": false
                },
                "scanScheduledTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan scheduled timestamp (in milliseconds) for a one time scan ",
                    "allowEmptyValue": false
                },
                "schedule": {
                    "type": "string",
                    "description": "A cron-formatted string representing the schedule of a recurring scan. If this is null, this task will be non-recurring and no recurring scan related parameter must be passed as parameter. But if this parameter is set then all the recurring scan related parameter must be set ",
                    "allowEmptyValue": false
                },
                "startupWindow": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Duration (in minutes) of the recurring scheduled task startup window. This field (together with the `schedule` field) defines a startup window. The task will start at some random time within that window. This is a recurring scan related parameter ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrScanSchedule",
            "description": "OTDR scan schedule data entry"
        },
        "OtdrScanScheduleOverview": {
            "type": "object",
            "properties": {
                "acquisitionTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan acquisition time (in seconds) ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Controls whether recurring scans associated to this schedule configuration must be executed or not (it can be used to disable temporarily the recurring scans) This is a recurring scan related parameter. Note that for enabled recurring scans parameters, 'enabledStartTime' and 'enabledEndTime' can be used to limit the scans timeframe to a particular period ",
                    "allowEmptyValue": false
                },
                "enabledEndTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The end time of the recurring scan interval as a UNIX Epoch timestamp in milliseconds, in GMT timezone. The value of this parameter must be greater than the value of the 'enabledStartTime' parameter This is a recurring scan related parameter ",
                    "allowEmptyValue": false
                },
                "enabledStartTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The start time of the recurring scan interval as a UNIX Epoch timestamp in milliseconds, in GMT timezone. This is a recurring scan related parameter ",
                    "allowEmptyValue": false
                },
                "externalLinkId": {
                    "type": "string",
                    "description": "The unique identifier of the External Link ",
                    "allowEmptyValue": false
                },
                "externalLinkName": {
                    "type": "string",
                    "description": "Name of the external link ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this OTDR scan reference object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "label": {
                    "type": "string",
                    "description": "A label for the OTDR scan ",
                    "allowEmptyValue": false
                },
                "networkElementId": {
                    "type": "string",
                    "description": "The unique identifier of the NE of the scan port on the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "networkElementName": {
                    "type": "string",
                    "description": "The name of the NE of the scan port on the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "otdrDefinitionName": {
                    "type": "string",
                    "description": "The name of the OTDR Definition used in the creation ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "pulseWidthNS": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan pulse width (in nanoseconds) ",
                    "allowEmptyValue": false
                },
                "rangeM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan range (in meters) ",
                    "allowEmptyValue": false
                },
                "samplingResolutionM": {
                    "type": "number",
                    "format": "float",
                    "description": "OTDR Scan sampling resolution (in meters) ",
                    "allowEmptyValue": false
                },
                "scanDirection": {
                    "type": "string",
                    "description": "Direction of the scan ",
                    "allowEmptyValue": false
                },
                "scanPortId": {
                    "type": "string",
                    "description": "The unique identifier of the port of the External Link that is the target of the OTDR scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanPortName": {
                    "type": "string",
                    "description": "The name of the scan port on the OTDR Scan ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "scanScheduledTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "OTDR Scan scheduled timestamp (in milliseconds) for a one time scan ",
                    "allowEmptyValue": false
                },
                "schedule": {
                    "type": "string",
                    "description": "A cron-formatted string representing the schedule of a recurring scan. If this is null, this task will be non-recurring and no recurring scan related parameter must be passed as parameter. But if this parameter is set then all the recurring scan related parameter must be set ",
                    "allowEmptyValue": false
                },
                "startupWindow": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Duration (in minutes) of the recurring scheduled task startup window. This field (together with the `schedule` field) defines a startup window. The task will start at some random time within that window. This is a recurring scan related parameter ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "OtdrScanScheduleOverview",
            "description": "OTDR scan schedule reference data entry"
        },
        "PortTypeAlarmProfileMapping": {
            "type": "object",
            "properties": {
                "alarmProfileId": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "portType": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "PortTypeAlarmProfileMapping"
        },
        "ProtocolConnectivityState": {
            "type": "object",
            "properties": {
                "protocolDetailedState": {
                    "type": "string",
                    "description": "The connectivity detailed state for the protocol. ",
                    "allowEmptyValue": false
                },
                "protocolLastTimestamp": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The date (in miliseconds) for the last change in connectivity state for the element. ",
                    "allowEmptyValue": false
                },
                "protocolState": {
                    "type": "string",
                    "description": "The connectivity state (up, down, unknown) for the protocol. ",
                    "allowEmptyValue": false
                },
                "protocolType": {
                    "type": "string",
                    "description": "The protocol type (gnmi, snmp). ",
                    "allowEmptyValue": false
                }
            },
            "title": "ProtocolConnectivityState"
        },
        "ProtocolConnectivityStateList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ProtocolConnectivityState"
                    }
                }
            },
            "title": "ProtocolConnectivityStateList"
        },
        "ReportDefinition": {
            "type": "object",
            "required": [
                "name",
                "targetEntities",
                "targetGroups",
                "type"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "An extended description of the report definition and what purpose it fulfills ",
                    "allowEmptyValue": false
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time for the analysis period to use for report generation ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the report definition object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "A friendly name to describe the report definition ",
                    "allowEmptyValue": false
                },
                "parameters": {
                    "type": "object",
                    "description": "The set of parameters which will be used to generate reports ",
                    "allowEmptyValue": false
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time for the analysis period to use for report generation ",
                    "allowEmptyValue": false
                },
                "targetEntities": {
                    "type": "array",
                    "description": "The list of network entities which will be included in reports generated using the report definition ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "targetGroups": {
                    "type": "array",
                    "description": "The list of network groups which will be included in reports generated using the report definition ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of report described by the report definition ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "ReportDefinition"
        },
        "ReportParameter": {
            "type": "object",
            "required": [
                "name",
                "required",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The property name of the parameter. This is the expected key in the Report Definition parameters object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "required": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if this parameter is required in the Report Definition in order to generate reports ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The data type of the parameter ",
                    "readOnly": true,
                    "allowEmptyValue": false
                }
            },
            "title": "ReportParameter"
        },
        "ReportRetention": {
            "type": "object",
            "properties": {
                "manualReports": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The duration in days to retain reports generated manually (single-run) ",
                    "allowEmptyValue": false
                },
                "scheduledReports": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The duration in days to retain reports generated on a schedule ",
                    "allowEmptyValue": false
                }
            },
            "title": "ReportRetention"
        },
        "ReportRun": {
            "type": "object",
            "required": [
                "definition",
                "id",
                "status"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "definition": {
                    "type": "string",
                    "description": "The ID of the Report Definition used to generate this report ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the report object ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "runType": {
                    "type": "string",
                    "description": "Enum value indicating if this report was generated as part of a recurring schedule or as a one-off execution ",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "Enum value indicating if this report is complete, in progress, or in an error state ",
                    "allowEmptyValue": false
                },
                "step": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If set, the current step of the generation process for this report ",
                    "allowEmptyValue": false
                },
                "totalSteps": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If set, the total number of steps in the generation process for this report ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "ReportRun"
        },
        "ReportTargetRequirements": {
            "type": "object",
            "properties": {
                "combinedMaximum": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the maximum combined number of target entities and groups required by this report type If this is not set, there is no maximum. For example, if this is '10' then the sum of the number of target entities and target groups may not exceed 10 ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "combinedMinimum": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the minimum combined number of target entities and groups required by this report type If this is not set, there is no minimum. For example, if this is '1' and the other minimums are unset, then at least one target entity OR target group must be specified ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "maximumEntities": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the maximum number of target entities allowed by this report type. If this is not set, there is no maximum ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "maximumGroups": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the maximum number of target groups allowed by this report type. If this is not set, there is no maximum ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "minimumEntities": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the minimum number of target entities required by this report type. If this is not set, there is no minimum ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "minimumGroups": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the minimum number of target groups required by this report type. If this is not set, there is no minimum ",
                    "readOnly": true,
                    "allowEmptyValue": false
                }
            },
            "title": "ReportTargetRequirements"
        },
        "ReportTypeDetails": {
            "type": "object",
            "required": [
                "id",
                "name",
                "parameters"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique ID for this report type ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "User-friendly name of this report type ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "parameters": {
                    "type": "array",
                    "description": "List of the parameters that this report type accepts for use in report generation ",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ReportParameter"
                    }
                },
                "targetEntityTypes": {
                    "type": "array",
                    "description": "List of the types of entities which are allowed to be specified as targets for this report type ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "targetGroupsAllowed": {
                    "type": "boolean",
                    "example": false,
                    "description": "If true, Groups may be specified as targets for this report type ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "targetRequirements": {
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ReportTargetRequirements"
                },
                "timeSelectionRequired": {
                    "type": "boolean",
                    "example": false,
                    "description": "If true, the report definition must have valid timing selection specified. True by default ",
                    "readOnly": true,
                    "allowEmptyValue": false
                }
            },
            "title": "ReportTypeDetails"
        },
        "Resource": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "file": {
                    "$ref": "#/definitions/File"
                },
                "filename": {
                    "type": "string"
                },
                "inputStream": {
                    "$ref": "#/definitions/InputStream"
                },
                "open": {
                    "type": "boolean"
                },
                "readable": {
                    "type": "boolean"
                },
                "uri": {
                    "$ref": "#/definitions/URI"
                },
                "url": {
                    "$ref": "#/definitions/URL"
                }
            },
            "title": "Resource"
        },
        "S3Connector": {
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "dataSource",
                "flushSize",
                "storeUrl",
                "uploadStrategy"
            ],
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "S3 storage AWS access key ID ",
                    "allowEmptyValue": false
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "S3 storage AWS access key ",
                    "allowEmptyValue": false
                },
                "bucketName": {
                    "type": "string",
                    "description": "S3 storage bucket name ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "dataSource": {
                    "type": "string",
                    "description": "Identifier of the datasource type. Datasource property defines the S3 upload operation's source system. Target system is S3 storage ",
                    "allowEmptyValue": false
                },
                "flushSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of records written to store before invoking file commits ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this S3Connector object ",
                    "allowEmptyValue": false
                },
                "partitionFieldName": {
                    "type": "string",
                    "description": "The partitions to use when writing data to the store. Partitions the data to different directories according to the value of the partitioning field specified Only applied to KPI data source ",
                    "allowEmptyValue": false
                },
                "rotationSchedule": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The time interval in milliseconds to periodically invoke file commits This configuration ensures that file commits are invoked at every configured interval Time of commit will be adjusted to 00:00 of selected timezone The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages This parameter will only be used if upload strategy is scheduled_rotation ",
                    "allowEmptyValue": false
                },
                "s3Region": {
                    "type": "string",
                    "description": "The AWS region to be used by the connector ",
                    "allowEmptyValue": false
                },
                "storeUrl": {
                    "type": "string",
                    "description": "S3 store URL information ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "uploadStrategy": {
                    "type": "string",
                    "description": "The S3 connector’s upload strategy determines how records read from a Kafka topic are partitioned into S3 objects ",
                    "allowEmptyValue": false
                }
            },
            "title": "S3Connector"
        },
        "S3ConnectorTest": {
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "storeUrl"
            ],
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "S3 storage AWS access key ID ",
                    "allowEmptyValue": false
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "S3 storage AWS access key ",
                    "allowEmptyValue": false
                },
                "bucketName": {
                    "type": "string",
                    "description": "S3 storage bucket name ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this S3Connector object ",
                    "allowEmptyValue": false
                },
                "s3Region": {
                    "type": "string",
                    "description": "The AWS region to be used by the connector ",
                    "allowEmptyValue": false
                },
                "storeUrl": {
                    "type": "string",
                    "description": "S3 store URL information ",
                    "allowEmptyValue": false
                }
            },
            "title": "S3ConnectorTest"
        },
        "ScheduledReport": {
            "type": "object",
            "required": [
                "definition"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "definition": {
                    "type": "string",
                    "description": "The ID for the report definition which will be run ",
                    "allowEmptyValue": false
                },
                "executions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of times this scheduled report task has run ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the scheduled report entry ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "maximumExecutions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of times this scheduled report task should run ",
                    "allowEmptyValue": false
                },
                "schedule": {
                    "type": "string",
                    "description": "A cron-formatted string representing the schedule for this entry. If this is null, this task will be non-recurring and run immediately ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "ScheduledReport"
        },
        "ScheduledReportOverview": {
            "type": "object",
            "required": [
                "definition"
            ],
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "definition": {
                    "type": "string",
                    "description": "The ID for the report definition which will be run ",
                    "allowEmptyValue": false
                },
                "definitionName": {
                    "type": "string",
                    "description": "The name of the associated Report Definition for the scheduled report task ",
                    "allowEmptyValue": false
                },
                "executions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of times this scheduled report task has run ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the scheduled report entry ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "maximumExecutions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of times this scheduled report task should run ",
                    "allowEmptyValue": false
                },
                "schedule": {
                    "type": "string",
                    "description": "A cron-formatted string representing the schedule for this entry. If this is null, this task will be non-recurring and run immediately ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                }
            },
            "title": "ScheduledReportOverview"
        },
        "ServerInfo": {
            "type": "object",
            "properties": {
                "buildNumber": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "version": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "ServerInfo"
        },
        "Setting": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "value": {
                    "type": "string",
                    "allowEmptyValue": false
                }
            },
            "title": "Setting"
        },
        "SwaggerDocsStatus": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "allowEmptyValue": false
                }
            },
            "title": "SwaggerDocsStatus"
        },
        "URI": {
            "type": "object",
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "authority": {
                    "type": "string"
                },
                "fragment": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "opaque": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "query": {
                    "type": "string"
                },
                "rawAuthority": {
                    "type": "string"
                },
                "rawFragment": {
                    "type": "string"
                },
                "rawPath": {
                    "type": "string"
                },
                "rawQuery": {
                    "type": "string"
                },
                "rawSchemeSpecificPart": {
                    "type": "string"
                },
                "rawUserInfo": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "schemeSpecificPart": {
                    "type": "string"
                },
                "userInfo": {
                    "type": "string"
                }
            },
            "title": "URI"
        },
        "URL": {
            "type": "object",
            "properties": {
                "authority": {
                    "type": "string"
                },
                "content": {
                    "type": "object"
                },
                "defaultPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "file": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "userInfo": {
                    "type": "string"
                }
            },
            "title": "URL"
        },
        "WeatherConfig": {
            "type": "object",
            "required": [
                "apiKey",
                "minInterval",
                "name",
                "type",
                "url"
            ],
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Weather data provider api access key ",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "createdOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was created (using UTC offset)",
                    "allowEmptyValue": false
                },
                "enabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Controls whether data collection is enabled/disabled for any resources associated to this configuration profile ",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the Weather config ",
                    "readOnly": true,
                    "allowEmptyValue": false
                },
                "minInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Minimum interval in milliseconds between consecutive invocations to the external weather provider for guaranteeing that the provider restrictions are fulfilled ",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Weather config, which will help to differentiate the configuration. It should be valid string which is not null, not empty. For each object, attribute name must be unique ",
                    "allowEmptyValue": false
                },
                "period": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Period in minutes between invocations to the external weather service provider for the same location ",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type of Weather config. Currently, only open-weather value is supported ",
                    "allowEmptyValue": false
                },
                "updatedBy": {
                    "type": "string",
                    "allowEmptyValue": false
                },
                "updatedOn": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time in milliseconds since the resource was updated (using UTC offset)",
                    "allowEmptyValue": false
                },
                "url": {
                    "type": "string",
                    "description": "Weather data provider api access url ",
                    "allowEmptyValue": false
                }
            },
            "title": "WeatherConfig"
        }
    }
}
